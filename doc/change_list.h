/*
working====================
2014/03/04
1.给LPC1768_V1.4增加新版本，1.4版本回路功能已经正常
2.合并其它部分代码到1.4中，显示所有其它信息
3.发送心跳、串口查询、写历史记录时检测回路同步信息
4.禁止外部中断1，使用1s查询功能（i2c）读取时钟
5.以回路信息为最高优先级，其余内容分别作单独处理，并做出让步
6.

working====================
2014/03/05  09:39:36
1.注册地址删除
2.防区代表场地，地址范围为1~200
3.基地址+防区号 = 回路地址，如果回路地址超过200，直接掐死
4.建立50个buff，存储探头用，根据回路号来代表不同的分区
5.串口0的优先级提高，接收数据时优先级最高
6.发送心跳是139给自己发的信息，通过串口0接收来识别无线模块是不是好用。既能收也能发。
7.uart1 代码级改为PRIO_ZERO，之前为PRIO_ONE：1――》0
8.变量SendToF[i]
   0――基地址（通vLocalAddress[3]来表示各个位）
   1――防区数量
   14――存储部件总数
   15――开始存储注册地址
9.更改最大回路数量到215
#define  MAX_LOOP    215  //最大回路部件数量
10.change 最大防区200
#define  DEPART    200  //最大防区数量
11.修改防区由两位数变为三位数，并且可选择各个位
12.一个防区，可以注册多个部件，部件之间是或的关系
13.添加部件信息，componentinfo.h&.c,加入基地址，回路地址，防区，状态，部件等
14.添加store_add.h&.c，保存必要的地址信息，只调用store部分即可，不用调用componentinfo了
15.

note:==============
1.串口1
部件注册
部件信号强度

2.串口0：


菜单menu======================
本机设置  setup_Sure

本机地址  CLevel3_Sure




ClrSys_CLpScanCtrl
#include   "CLpScanCtrl.h"


working====================
2014/03/06  11:32:22
1.注册地址添加检测同防区和同部件
2.添加psn码检测
3.删除相应部件时需要删除与之相对应的PSN码！！！！！！！！！！！！！谨记
4.发现component.h&.c结构体只为存储而用的，实际上并没有用上
5.处理 部件注册 和 设置部件 界面
6.增加防区最大地址为200，更改所有之前显示两位的界面




working====================
2014/03/07  11:22:07
1.调整心跳，报出界面并对相关内容进行整理
2.修改发送心跳部分，20s内检测出无线模块故障，如果恢复正常，在故障页面后5s时间恢复到首页面
3.处理首警页面
4.处理其他报警页面


working====================
2014年3月12日 15:56:12
1.部件设置：对部件进行操作时，检测是否已经注册，未注册的添加提示信息，menu_row_err();

working====================
2014年3月19日 17:05:41
1.注册时添加对非法部件的检测
"非法部件"，提示不能注册


working====================
2014/03/20  15:58:30
1.修改回路显示开关量问题，两个部件均显示开关量部件
2.合并代码，E:\139\2\LPC1768_V1.6\doc，为1.6版




































































































































































































































































































































































































































































































  */









