<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\139W.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\139W.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Thu Apr 24 09:25:24 2014
<BR><P>
<H3>Maximum Stack Usage =        352 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; do_CRunCtrl &rArr; DisplayKeyMenu &rArr; Systemp_Task &rArr; Down_Task &rArr; Level3_Down &rArr; Level32_Down &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[356]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">NMI_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">MemManage_Handler</a><BR>
 <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
 <LI><a href="#[7]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">UsageFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">DebugMon_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[22]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[22]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">EINT1_IRQHandler</a> from extint.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[20]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">EINT3_IRQHandler</a> from cgpioirq.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">I2C0_IRQHandler</a> from i2c.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">PWM1_IRQHandler</a> from pwm.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from delay.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2f]">SystemInit</a> from system_lpc17xx.o(.text) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[d]">TIMER0_IRQHandler</a> from ctime.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">TIMER1_IRQHandler</a> from ctime.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[f]">TIMER2_IRQHandler</a> from ctime.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">UART0_IRQHandler</a> from uart.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">UART1_IRQHandler</a> from uart.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[24]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[31]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[31]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[32]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[34]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[358]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[359]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[35a]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[35b]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[35c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[35]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[35d]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[35e]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[35f]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[360]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[361]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[362]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[363]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[364]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[365]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[366]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[367]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[368]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[369]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[36a]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[36b]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[36c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[36d]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[36e]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[36f]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[3e]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[370]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[371]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[372]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[373]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[374]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[375]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[33]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[376]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[37]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[39]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_li &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[377]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3a]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; do_CRunCtrl &rArr; DisplayKeyMenu &rArr; Systemp_Task &rArr; Down_Task &rArr; Level3_Down &rArr; Level32_Down &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[378]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[4c]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3d]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[379]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3f]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[356]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3b]"></a>main</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = main &rArr; do_CRunCtrl &rArr; DisplayKeyMenu &rArr; Systemp_Task &rArr; Down_Task &rArr; Level3_Down &rArr; Level32_Down &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CRunCtrl
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, delay.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[37a]"></a>delay1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, delay.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>DelayUs2x</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, delay.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1Ms
</UL>

<P><STRONG><a name="[45]"></a>Delay1Ms</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, delay.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs2x
</UL>

<P><STRONG><a name="[259]"></a>Relay_Init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, crelay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[10b]"></a>Fire_Relay_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, crelay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_relay_deal
</UL>

<P><STRONG><a name="[1a2]"></a>Fire_Relay_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, crelay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
</UL>

<P><STRONG><a name="[119]"></a>Fault_Relay_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, crelay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
</UL>

<P><STRONG><a name="[11e]"></a>Fault_Relay_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, crelay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_deal
</UL>

<P><STRONG><a name="[47]"></a>EndInt</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cintstend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EndInt &rArr; Eint_Dis &rArr; extint3_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Dis
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrSys_CLpScanCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[4a]"></a>StartInt</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, cintstend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = StartInt &rArr; Eint_En &rArr; extint3_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_En
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[37b]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[37c]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[37d]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[37e]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[37f]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>SystemInit</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[41]"></a>SystemClockUpdate</STRONG> (Thumb, 320 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[380]"></a>SSP_SSELToggle</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, ssp.o(.text), UNUSED)

<P><STRONG><a name="[258]"></a>SSP1_Init</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[4e]"></a>SPI_FLASH_SendByte</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_ReadFast_1Byte
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Read_Bytes
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Read_1Byte
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_Bytes
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_1Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Section_Erase
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_S1B
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_READ1B
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B
</UL>

<P><STRONG><a name="[4d]"></a>M25P80_CMD1B</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = M25P80_CMD1B
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Bulk_Erase
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
</UL>

<P><STRONG><a name="[4f]"></a>M25P80_CMD1B_READ1B</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = M25P80_CMD1B_READ1B
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
</UL>

<P><STRONG><a name="[50]"></a>M25P80_CMD1B_S1B</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
</UL>

<P><STRONG><a name="[51]"></a>M25P80_Write_En</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = M25P80_Write_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_S1B
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_READ1B
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_Bytes
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_1Byte
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Bulk_Erase
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Section_Erase
</UL>

<P><STRONG><a name="[52]"></a>M25P80_WP_En</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_S1B
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_READ1B
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_Bytes
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_1Byte
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Bulk_Erase
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Section_Erase
</UL>

<P><STRONG><a name="[53]"></a>M25P80_Busy</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = M25P80_Busy
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Read_Bytes
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_Bytes
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_1Byte
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Bulk_Erase
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Section_Erase
</UL>

<P><STRONG><a name="[54]"></a>M25P80_Section_Erase</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = M25P80_Section_Erase &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSaveAnn
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_record
</UL>

<P><STRONG><a name="[55]"></a>M25P80_Bulk_Erase</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B
</UL>

<P><STRONG><a name="[56]"></a>M25P80_Write_1Byte</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSaveAnn
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_record
</UL>

<P><STRONG><a name="[57]"></a>M25P80_Write_Bytes</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[58]"></a>M25P80_Read_1Byte</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = M25P80_Read_1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoteData_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnnCounterInit
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_record
</UL>

<P><STRONG><a name="[59]"></a>M25P80_Read_Bytes</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[381]"></a>SSPSend</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ssp.o(.text), UNUSED)

<P><STRONG><a name="[382]"></a>SSPReceive</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, ssp.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>M25P80_ReadFast_1Byte</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[64]"></a>Wait_I2c_End</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteNByte
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadNByte
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRcvByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISendByte
</UL>

<P><STRONG><a name="[5b]"></a>I2C0_Init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C0_Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[5e]"></a>i2c0_enable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c0_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_EnAll_Exuart
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_En
</UL>

<P><STRONG><a name="[5f]"></a>i2c0_disable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c0_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_DisAll_Exuart
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Dis
</UL>

<P><STRONG><a name="[61]"></a>I2CIntEnd</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>

<P><STRONG><a name="[62]"></a>I2CIntStart</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>

<P><STRONG><a name="[63]"></a>ISendByte</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2c_End
</UL>

<P><STRONG><a name="[65]"></a>IRcvByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2c_End
</UL>

<P><STRONG><a name="[66]"></a>I2C_ReadNByte</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_ReadNByte
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2c_End
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_INT_State
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Get_TD
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Set_TD
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Read
</UL>

<P><STRONG><a name="[67]"></a>I2C_WriteNByte</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_WriteNByte
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2c_End
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_INT_State
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Set_Timer
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Set_Alarm
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Set_ClkOut
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Set_TD
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_SS
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Set
</UL>

<P><STRONG><a name="[16]"></a>I2C0_IRQHandler</STRONG> (Thumb, 572 bytes, Stack size 0 bytes, i2c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>ClrData3</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[125]"></a>clr_tp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[133]"></a>GetCom1Data0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_from_data0
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadHeart
</UL>

<P><STRONG><a name="[124]"></a>ClrCom1Data0</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[43]"></a>lcd_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnnRow
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoteData_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnnCounterInit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_loopld_printf
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_alarmnums
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethistory_show_pos
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_hist_up
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Up
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_historyrecord_ok
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Note_Flag
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Down
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Alarm
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CirAddrInfo
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_alarm_info
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_deal
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_normalalarm_ciraddr
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inquiry_signal_strength
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_zone_comp_info
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printbuf
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_firealarm
</UL>

<P><STRONG><a name="[68]"></a>AnnCounterInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AnnCounterInit &rArr; M25P80_Read_1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Read_1Byte
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_flash_all
</UL>

<P><STRONG><a name="[69]"></a>NoteData_Init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NoteData_Init &rArr; M25P80_Read_1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Read_1Byte
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_flash_all
</UL>

<P><STRONG><a name="[2b3]"></a>GetCom0Ann</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Annotate_Menu
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Breakdown
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alarm_Menu
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
</UL>

<P><STRONG><a name="[6a]"></a>SetConvertdataAll</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetConvertdataAll
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetConvertdata
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[12]"></a>UART1_IRQHandler</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UART1_IRQHandler &rArr; CompareAddr &rArr; get_comp_psn3 &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_from_data0
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBindSend
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComRegFlag
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAddr
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrHeartFaultFlag
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGetIntenFlag
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetConvertdataAll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[383]"></a>GetAnnFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>GetAnnRow</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetAnnRow
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Annotate_Menu
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Breakdown
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alarm_Menu
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[73]"></a>recv_note_info</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = recv_note_info
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[11]"></a>UART0_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART0_IRQHandler &rArr; recv_note_info
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlag_195
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Note_Flag
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_note_info
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrData3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>CSaveAnn</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CSaveAnn &rArr; M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_1Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Section_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleNote
</UL>

<P><STRONG><a name="[79]"></a>HandleNote</STRONG> (Thumb, 378 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HandleNote &rArr; reset_ok &rArr; Menu_complete &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Note_Flag
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSaveAnn
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[7c]"></a>UARTInit</STRONG> (Thumb, 330 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UARTInit &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[7f]"></a>UartIntEnd</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>

<P><STRONG><a name="[81]"></a>UartIntStart</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>

<P><STRONG><a name="[82]"></a>uart_all_disable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_all_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Dis
</UL>

<P><STRONG><a name="[83]"></a>uart_all_enable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_all_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_En
</UL>

<P><STRONG><a name="[e9]"></a>UARTSend</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBindSend
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_ByUart0
</UL>

<P><STRONG><a name="[86]"></a>Uart1SendByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendString
</UL>

<P><STRONG><a name="[84]"></a>UART0_SendString</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0SendByte
</UL>

<P><STRONG><a name="[85]"></a>UART1_SendString</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1SendByte
</UL>

<P><STRONG><a name="[88]"></a>uart1GetByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1GetStr
</UL>

<P><STRONG><a name="[8a]"></a>uart0GetByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0GetStr
</UL>

<P><STRONG><a name="[87]"></a>uart1GetStr</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1GetByte
</UL>

<P><STRONG><a name="[89]"></a>uart0GetStr</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0GetByte
</UL>

<P><STRONG><a name="[8b]"></a>puts__</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0SendByte
</UL>

<P><STRONG><a name="[252]"></a>GPIOinit</STRONG> (Thumb, 446 bytes, Stack size 0 bytes, gpioinit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[8c]"></a>timern_enable</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, ctime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timern_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_EnAll_Exuart
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_En
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
</UL>

<P><STRONG><a name="[8f]"></a>timern_disable</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ctime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timern_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_DisAll_Exuart
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Dis
</UL>

<P><STRONG><a name="[91]"></a>init_timer</STRONG> (Thumb, 282 bytes, Stack size 16 bytes, ctime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = init_timer &rArr; timern_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timern_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[384]"></a>SetTimeTickCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[385]"></a>AddTimeTickCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[386]"></a>GetTimeTickCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[387]"></a>SetHeartTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[388]"></a>AddHeartTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[389]"></a>GetHeartTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[38a]"></a>AddSpeakerTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[38b]"></a>SetSpeakerTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[38c]"></a>GetSpeakerTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[d]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ctime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TIMER0_IRQHandler &rArr; T0Int_CTimeCtrl &rArr; SetCommT0_CTimeCtrl &rArr; SaveComm_CTimeCtrl &rArr; SetData_CLpAnsCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_En
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Dis
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ctime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER1_IRQHandler &rArr; T1Int_CTimeCtrl &rArr; set_speark_ss_time
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_En
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Dis
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ctime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMER2_IRQHandler &rArr; Scan_Key
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_Key
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[38d]"></a>vAddLedFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>vClrLedFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLedShow
</UL>

<P><STRONG><a name="[98]"></a>vGetLedFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLedShow
</UL>

<P><STRONG><a name="[2a4]"></a>vAddScreenMask</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ctime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
</UL>

<P><STRONG><a name="[260]"></a>vGetScreenMask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_lcd
</UL>

<P><STRONG><a name="[96]"></a>vClrScreenMask</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OffLcd
</UL>

<P><STRONG><a name="[95]"></a>OffLcd</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, ctime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OffLcd
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClrScreenMask
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_lcd
</UL>

<P><STRONG><a name="[cf]"></a>OnLCD</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ctime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_Key
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inquiry_signal_strength
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[38e]"></a>enable_timer</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[38f]"></a>disable_timer</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[390]"></a>reset_timer</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, ctime.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>CLedShow</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ctime.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_On
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_Off
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGetLedFlag
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClrLedFlag
</UL>

<P><STRONG><a name="[262]"></a>CSpeakerPWM</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ctime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_speaker
</UL>

<P><STRONG><a name="[391]"></a>Get_CTime0Def</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[392]"></a>Set_CTime0Def</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[393]"></a>Sel_CTime0Def</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[256]"></a>Get_Timer_100us</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ctimedef.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[394]"></a>Get_Timer_200us</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[395]"></a>Get_Timer_600us</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[396]"></a>Get_Timer_2ms</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[397]"></a>Get_Timer_5ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[398]"></a>Get_Timer_8ms</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[399]"></a>Get_Timer_10ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[257]"></a>Get_Timer_20ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ctimedef.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[39a]"></a>AddTwoFallEdgeCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[39b]"></a>ClrTwoFallEdgeCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[39c]"></a>GetTwoFallEdgeCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[39d]"></a>AddRisedgeCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[39e]"></a>ClrRisedgeCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[39f]"></a>GetRisedgeCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[3a0]"></a>AddWait2msCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[3a1]"></a>ClrWait2msCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[3a2]"></a>GetWait2msCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[3a3]"></a>Is2msArrived</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[3a4]"></a>Enable2ms</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[3a5]"></a>Disable2ms</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[3a6]"></a>Get2msState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[3a7]"></a>Set2msArrived</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[3a8]"></a>Get2msArrived</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[3a9]"></a>Clr2msArrived</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ctimedef.o(.text), UNUSED)

<P><STRONG><a name="[3aa]"></a>beepReverse</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, pwm.o(.text), UNUSED)

<P><STRONG><a name="[15]"></a>PWM1_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, pwm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>PWM_Init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[9e]"></a>pwm1_enable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pwm1_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_EnAll_Exuart
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_En
</UL>

<P><STRONG><a name="[a5]"></a>pwm1_disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_DisAll_Exuart
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Dis
</UL>

<P><STRONG><a name="[25a]"></a>PWM1_Set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[1d1]"></a>PWM1_Start</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_test_start_stop
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_speark_ss_time
</UL>

<P><STRONG><a name="[2a5]"></a>get_PWM1_Started</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
</UL>

<P><STRONG><a name="[1d2]"></a>set_PWM1_Started</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_test_start_stop
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
</UL>

<P><STRONG><a name="[d4]"></a>clr_PWM1_Started</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel23_Return
</UL>

<P><STRONG><a name="[d3]"></a>PWM1_Stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel23_Return
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_speark_ss_time
</UL>

<P><STRONG><a name="[9f]"></a>extint3_enable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = extint3_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_EnAll_Exuart
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint3_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_En
</UL>

<P><STRONG><a name="[a2]"></a>extint3_disable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = extint3_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_DisAll_Exuart
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Dis
</UL>

<P><STRONG><a name="[a4]"></a>Eint3_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, extint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_enable
</UL>

<P><STRONG><a name="[48]"></a>Eint_Dis</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Eint_Dis &rArr; extint3_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_disable
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_disable
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timern_disable
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_all_disable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT1_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_basic_info
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndInt
</UL>

<P><STRONG><a name="[4b]"></a>Eint_En</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Eint_En &rArr; extint3_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_enable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_enable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timern_enable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_all_enable
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT1_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_basic_info
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartInt
</UL>

<P><STRONG><a name="[a6]"></a>Eint_DisAll_Exuart</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, extint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_disable
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_disable
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timern_disable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_disable
</UL>

<P><STRONG><a name="[a7]"></a>Eint_EnAll_Exuart</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Eint_EnAll_Exuart &rArr; extint3_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_enable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_enable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timern_enable
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[aa]"></a>SetE1_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, extint.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT1_IRQHandler
</UL>

<P><STRONG><a name="[20f]"></a>ClrE1_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, extint.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_head_menu
</UL>

<P><STRONG><a name="[3ab]"></a>GetE1_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, extint.o(.text), UNUSED)

<P><STRONG><a name="[3ac]"></a>SetE3_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, extint.o(.text), UNUSED)

<P><STRONG><a name="[3ad]"></a>ClrE3_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, extint.o(.text), UNUSED)

<P><STRONG><a name="[3ae]"></a>GetE3_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, extint.o(.text), UNUSED)

<P><STRONG><a name="[3af]"></a>cExt3IntFlow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, extint.o(.text), UNUSED)

<P><STRONG><a name="[3b0]"></a>cExt3IntRise</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, extint.o(.text), UNUSED)

<P><STRONG><a name="[3b1]"></a>cExt3IntClrFlow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, extint.o(.text), UNUSED)

<P><STRONG><a name="[3b2]"></a>cExt3IntClrRise</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, extint.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>extint1_enable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, extint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>

<P><STRONG><a name="[a9]"></a>extint1_disable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, extint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>

<P><STRONG><a name="[1f]"></a>EINT1_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EINT1_IRQHandler &rArr; Eint_En &rArr; extint3_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetE1_flag
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_En
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Dis
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[255]"></a>Init_CGpioIrq</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, cgpioirq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init_CGpioIrq
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[21]"></a>EINT3_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, cgpioirq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_0mA
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPer_CLpCkCtrl
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetExtint_CLpCkCtrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a8]"></a>DelayMs</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
</UL>

<P><STRONG><a name="[af]"></a>DATAout</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DATAout
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlackByte
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
</UL>

<P><STRONG><a name="[ae]"></a>CheckState</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATAout
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLCD
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlackByte
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDoubleByte
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
</UL>

<P><STRONG><a name="[b0]"></a>SendCommandToLCD</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATAout
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOnOff
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartLine
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[b1]"></a>SetLine</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetLine &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlue
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBlack
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZKBlack
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear16Screen
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>

<P><STRONG><a name="[b2]"></a>SetStartLine</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetStartLine &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLCD
</UL>

<P><STRONG><a name="[b3]"></a>SetColumn</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlue
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBlack
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZKBlack
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear16Screen
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>

<P><STRONG><a name="[b4]"></a>SetOnOff</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetOnOff &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLCD
</UL>

<P><STRONG><a name="[b5]"></a>WriteByte</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteByte &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATAout
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlue
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear16Screen
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>

<P><STRONG><a name="[b6]"></a>WriteDoubleByte</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
</UL>

<P><STRONG><a name="[b7]"></a>WriteBlackByte</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteBlackByte &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATAout
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZKBlack
</UL>

<P><STRONG><a name="[b9]"></a>SelectScreen</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBlack
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZKBlack
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLCD
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear16Screen
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>

<P><STRONG><a name="[b8]"></a>ClearScreen</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClearScreen &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlue
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLCD
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_comp_state
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_save
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Breakdown
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alarm_Menu
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fault
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_head_menu
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_up
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_hist_up
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_waiting
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_nohistory
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Speaker_Open_Close
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_menu_deal
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_historyrecord_ok
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_ok
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel22_Return
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_history_over
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Menu
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Menu
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Menu
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSaveInfo
</UL>

<P><STRONG><a name="[ba]"></a>Clear16Screen</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[3b3]"></a>delay</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[3b4]"></a>delay_long</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>InitLCD</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = InitLCD &rArr; ClearScreen &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOnOff
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartLine
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[3b5]"></a>WriteBytedata</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>DisplayJBHZKBlack</STRONG> (Thumb, 444 bytes, Stack size 64 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DisplayJBHZKBlack &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlackByte
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSelectBlack
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compreg
</UL>

<P><STRONG><a name="[bd]"></a>DisplayJBHZK</STRONG> (Thumb, 434 bytes, Stack size 64 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Annotate_Menu
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_wirelessmod_fault
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Breakdown
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alarm_Menu
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_waiting
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_press_return_toreturn
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_nohistory
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_complete
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Speaker_Open_Close
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelf_Menu
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_complete
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compset
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_started
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_masked
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_ops_done
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_opsing
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_deling
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_press_ok_save
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_done
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_noreg
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_press_ok_complete
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_history_over
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Menu
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Menu
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_head_title
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Menu1
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSaveInfo
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_save_all
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_note
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_datetime_setup
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_component_setup
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_component_reg
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_local_machine
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_speaker_setup
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_backtodefault
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_reset
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_test
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_query
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_setup
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_system_query_compnums
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_system_query
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_savetips
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_saving
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_haved_saved
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fire
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_lowvolatage
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_normal
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_del
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_stop
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_start
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_ciraddr
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_mask_stop
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_mask_start
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_devtype
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSelect
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compreg_tips
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compreg
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_regedsucc
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_overcompnums
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_devreged
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compreged
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_overciraddr
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comptype
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_invalid_comp
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_reging
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compaddr
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_sigstrength
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_notreged
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_batlow
</UL>

<P><STRONG><a name="[be]"></a>Display</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Display &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Menu
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Menu
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Menu
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Menu1
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Menu1
</UL>

<P><STRONG><a name="[bf]"></a>DisplayBlack</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[c0]"></a>Display1</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Display1 &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Annotate_Menu
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Breakdown
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alarm_Menu
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_date_time
</UL>

<P><STRONG><a name="[3b6]"></a>DisplaynumberJBHZK</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>Displaynumber</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Displaynumber &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Annotate_Menu
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Breakdown
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alarm_Menu
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Speaker_Open_Close
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_colon
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Menu
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Menu
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Menu1
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_date_time
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Menu1
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_save_all
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_note
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_datetime_setup
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_component_setup
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_component_reg
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_local_machine
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_speaker_setup
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_backtodefault
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_reset
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_test
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_query
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_setup
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_system_query_compnums
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_or_reverse
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_ciraddr
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comptype
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compaddr
</UL>

<P><STRONG><a name="[c2]"></a>DisplaynumberBlack</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DisplaynumberBlack &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlackByte
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Annotate_Menu
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_or_reverse
</UL>

<P><STRONG><a name="[c3]"></a>WriteBlue</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[c4]"></a>PCF8563_Set</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, pcf8563.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = PCF8563_Set &rArr; I2C_WriteNByte
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteNByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Init
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
</UL>

<P><STRONG><a name="[c5]"></a>PCF8563_Read</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, pcf8563.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = PCF8563_Read &rArr; I2C_ReadNByte
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadNByte
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getcurrent_date
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Menu
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[c6]"></a>getcurrent_date</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pcf8563.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = getcurrent_date &rArr; PCF8563_Read &rArr; I2C_ReadNByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[c7]"></a>PCF8563_SS</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, pcf8563.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteNByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Init
</UL>

<P><STRONG><a name="[c8]"></a>PCF8563_Set_TD</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, pcf8563.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteNByte
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadNByte
</UL>

<P><STRONG><a name="[c9]"></a>PCF8563_Get_TD</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, pcf8563.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadNByte
</UL>

<P><STRONG><a name="[ca]"></a>PCF8563_Set_ClkOut</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, pcf8563.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteNByte
</UL>

<P><STRONG><a name="[cb]"></a>PCF8563_Set_Alarm</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, pcf8563.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteNByte
</UL>

<P><STRONG><a name="[cc]"></a>PCF8563_Set_Timer</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, pcf8563.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteNByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Init
</UL>

<P><STRONG><a name="[cd]"></a>PCF8563_INT_State</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, pcf8563.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteNByte
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadNByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Init
</UL>

<P><STRONG><a name="[ce]"></a>PCF8563_Init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, pcf8563.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_INT_State
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Set_Timer
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_SS
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Set
</UL>

<P><STRONG><a name="[230]"></a>GetBackValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
</UL>

<P><STRONG><a name="[d7]"></a>ClrBackValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
</UL>

<P><STRONG><a name="[94]"></a>Scan_Key</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Scan_Key
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_Off
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplay_alarm_flag
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>Get_KeyValue</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_KeyValue
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarmFlag
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPasswordFlag
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrBackValue
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Stop
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_PWM1_Started
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systemp_Task
</UL>

<P><STRONG><a name="[e0]"></a>Led_Fire_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
</UL>

<P><STRONG><a name="[df]"></a>Led_Fault_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_deal
</UL>

<P><STRONG><a name="[9a]"></a>Led_Wireless_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLedShow
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunLed_CRunCtrl
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
</UL>

<P><STRONG><a name="[d1]"></a>Led_Silence_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_Key
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_relay_deal
</UL>

<P><STRONG><a name="[de]"></a>Led_Run_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunLed_CRunCtrl
</UL>

<P><STRONG><a name="[dd]"></a>Led_Fire_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
</UL>

<P><STRONG><a name="[dc]"></a>Led_Fault_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
</UL>

<P><STRONG><a name="[db]"></a>Led_Wireless_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
</UL>

<P><STRONG><a name="[da]"></a>Led_Silence_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
</UL>

<P><STRONG><a name="[d9]"></a>Led_Run_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
</UL>

<P><STRONG><a name="[d8]"></a>Led_Init</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, cled.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Led_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Run_Init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_Init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_Init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fire_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Run_Off
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_Off
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fire_Off
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_Off
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_CRunCtrl
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[e5]"></a>Led_Fire_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_ALL_On
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_relay_deal
</UL>

<P><STRONG><a name="[e4]"></a>Led_Fault_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_ALL_On
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
</UL>

<P><STRONG><a name="[99]"></a>Led_Wireless_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_ALL_On
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLedShow
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunLed_CRunCtrl
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
</UL>

<P><STRONG><a name="[e3]"></a>Led_Silence_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_ALL_On
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
</UL>

<P><STRONG><a name="[e2]"></a>Led_Run_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cled.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_ALL_On
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunLed_CRunCtrl
</UL>

<P><STRONG><a name="[e1]"></a>Led_ALL_On</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, cled.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Led_ALL_On
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Run_On
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_On
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_On
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fire_On
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_On
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
</UL>

<P><STRONG><a name="[e6]"></a>Led_Off</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, cled.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Led_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Run_Off
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_Off
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fire_Off
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_Off
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel23_Return
</UL>

<P><STRONG><a name="[13e]"></a>SetFirstAlarm_Flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccomhandle.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrCirAlarmData
</UL>

<P><STRONG><a name="[114]"></a>SetDisplay_alarm_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccomhandle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrCirAlarmData
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
</UL>

<P><STRONG><a name="[d0]"></a>GetDisplay_alarm_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccomhandle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_Key
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;have_alarm_backafter30s
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
</UL>

<P><STRONG><a name="[3b7]"></a>Setdisplay_alarm</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccomhandle.o(.text), UNUSED)

<P><STRONG><a name="[3b8]"></a>Getdisplay_alarm</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ccomhandle.o(.text), UNUSED)

<P><STRONG><a name="[3b9]"></a>Getalarmtime</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ccomhandle.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>SetSum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccomhandle.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrCirAlarmData
</UL>

<P><STRONG><a name="[3ba]"></a>GetSum</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ccomhandle.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>SetConvertdata</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccomhandle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetConvertdataAll
</UL>

<P><STRONG><a name="[e7]"></a>check_lp_running</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = check_lp_running
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSys_CLpScanCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_record
</UL>

<P><STRONG><a name="[6f]"></a>UartBindSend</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UartBindSend &rArr; UARTSend
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl_init
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[123]"></a>wireless_data_check</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, ccomhandle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[ea]"></a>find_zone_comp</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = find_zone_comp &rArr; get_comp_partnumber &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[ec]"></a>printf_zone_comp_info</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ccomhandle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_inzone
</UL>

<P><STRONG><a name="[ee]"></a>autoadd_compreg</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = autoadd_compreg
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCompRegNum
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegNum
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCompRegNum
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[71]"></a>CompareAddr</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CompareAddr &rArr; get_comp_psn3 &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn3
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn1
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn0
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_my_psn
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inquiry_signal_strength
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[f6]"></a>comp_reg_deal</STRONG> (Thumb, 858 bytes, Stack size 40 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = comp_reg_deal &rArr; CompReg_menu &rArr; menu_compreg_tips &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getcurrent_date
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_EnAll_Exuart
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnLCD
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComRegFlag
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAddr
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mask_info
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_hist_allinfo
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mask_info
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hist_all
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_comp_info
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_nums
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_localaddr
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartInt
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReg_CNodeInfo
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegParaSel
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegNum
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegAddr
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndInt
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoadd_compreg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_zone_comp
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[105]"></a>inquiry_signal_strength</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = inquiry_signal_strength &rArr; CompInten_Menu &rArr; menu_compaddr &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnLCD
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAddr
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_inzone
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[108]"></a>is_0xff</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ccomhandle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_psn_all0xff
</UL>

<P><STRONG><a name="[107]"></a>check_psn_all0xff</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = check_psn_all0xff
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_0xff
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[109]"></a>is_my_psn</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = is_my_psn &rArr; CompareAddr &rArr; get_comp_psn3 &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[10a]"></a>led_relay_deal</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = led_relay_deal
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fire_On
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_Off
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fire_Relay_On
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
</UL>

<P><STRONG><a name="[10c]"></a>set_firealarm_ciraddr</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_firealarm_ciraddr &rArr; SetAlarm_CNodeInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState_CNodeInfo
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarm_CNodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
</UL>

<P><STRONG><a name="[10f]"></a>set_faultalarm_ciraddr</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_faultalarm_ciraddr &rArr; SetAlarm_CNodeInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState_CNodeInfo
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarm_CNodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
</UL>

<P><STRONG><a name="[110]"></a>set_normalalarm_ciraddr</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_normalalarm_ciraddr
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState_CNodeInfo
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrAlarm_CNodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_deal
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_firealarm
</UL>

<P><STRONG><a name="[112]"></a>menu_firealarm_face</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = menu_firealarm_face &rArr; save_hist_all &rArr; save_histnums_info &rArr; save_record &rArr; M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_alarm_info
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_hist_allinfo
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hist_all
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReleaseFlag
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMenuFlag
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firealarm_ciraddr
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_relay_deal
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisplay_alarm_flag
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[118]"></a>menu_fault_deal</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = menu_fault_deal &rArr; save_hist_all &rArr; save_histnums_info &rArr; save_record &rArr; M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_On
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarmFlag
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_alarm_info
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_hist_allinfo
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hist_all
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReleaseFlag
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMenuFlag
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReleaseFlag
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAlarmFlag
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_faultalarm_ciraddr
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisplay_alarm_flag
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Relay_On
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[11c]"></a>normal_deal</STRONG> (Thumb, 470 bytes, Stack size 16 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = normal_deal &rArr; Query_ByUart0 &rArr; UARTSend
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_Off
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMenuFlag
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDatatoFlash
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_ByUart0
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDatatoFlash
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_normalalarm_ciraddr
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Relay_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[121]"></a>HandleInfo_Uart1</STRONG> (Thumb, 652 bytes, Stack size 16 bytes, ccomhandle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HandleInfo_Uart1 &rArr; comp_reg_deal &rArr; CompReg_menu &rArr; menu_compreg_tips &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_Off
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Read
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnLCD
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBindSend
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComRegFlag
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrHeartFaultFlag
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGetIntenFlag
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnnRow
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrCom1Data0
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_tp
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_first
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo_andsave
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_first
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_firealarmed
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_faultalarmed
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mask_info
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_devtype
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlagLed
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeAlarmType
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComData
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrComRegFlag
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrComData
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_deal
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_my_psn
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_psn_all0xff
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inquiry_signal_strength
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_data_check
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[3bb]"></a>GetHeart</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>ReadHeart</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ccompara.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCom1Data0
</UL>

<P><STRONG><a name="[6c]"></a>data_from_data0</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ccompara.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = data_from_data0
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCom1Data0
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[131]"></a>ClrComData</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[122]"></a>GetComData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[3bc]"></a>AddBattLowSum</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[3bd]"></a>GetBattLowSum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[3be]"></a>AddBrokenSum</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[3bf]"></a>GetBrokenSum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>MergeData</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com0Handle
</UL>

<P><STRONG><a name="[134]"></a>Com0DataUnzip</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, ccompara.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCom0Ann
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDepCompSum
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com0Handle
</UL>

<P><STRONG><a name="[137]"></a>Com0Handle</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ccompara.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com0DataUnzip
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MergeData
</UL>

<P><STRONG><a name="[3c0]"></a>AddHeartFaultFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[234]"></a>SetHeartFaultFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
</UL>

<P><STRONG><a name="[6d]"></a>ClrHeartFaultFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[236]"></a>GetHeartFaultFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
</UL>

<P><STRONG><a name="[d5]"></a>SetAlarmFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
</UL>

<P><STRONG><a name="[11a]"></a>GetAlarmFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inqury_state__byuart0
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
</UL>

<P><STRONG><a name="[3c1]"></a>GetFirstAlarm_Addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[3c2]"></a>AddAlarmInfoFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[3c3]"></a>SubAlarmInfoFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[3c4]"></a>SetAlarmInfoFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[3c5]"></a>GetAlarmInfoFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>SetReleaseFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
</UL>

<P><STRONG><a name="[11b]"></a>GetReleaseFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
</UL>

<P><STRONG><a name="[76]"></a>SetFlag_195</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inqury_state__byuart0
</UL>

<P><STRONG><a name="[239]"></a>GetFlag_195</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inqury_state__byuart0
</UL>

<P><STRONG><a name="[13a]"></a>SetCirAddrCurrent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareCirAddr
</UL>

<P><STRONG><a name="[3c6]"></a>GetCirAddrCurrent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>CompareCirAddr</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ccompara.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCirAddrCurrent
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
</UL>

<P><STRONG><a name="[13b]"></a>Init_CirAddrInfo</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ccompara.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Init_CirAddrInfo &rArr; get_comp_ciraddr &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReg_CNodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl_init
</UL>

<P><STRONG><a name="[13c]"></a>ClrCirAlarmData</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ccompara.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSum
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisplay_alarm_flag
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFirstAlarm_Flag
</UL>

<P><STRONG><a name="[25c]"></a>CirAlarmDataInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl_init
</UL>

<P><STRONG><a name="[126]"></a>SetFlagLed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[3c7]"></a>GetFlagLed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompara.o(.text), UNUSED)

<P><STRONG><a name="[3c8]"></a>SetAlarm_Circuit_Flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, caddresscount.o(.text), UNUSED)

<P><STRONG><a name="[3c9]"></a>AddCirCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, caddresscount.o(.text), UNUSED)

<P><STRONG><a name="[3ca]"></a>GetCirCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, caddresscount.o(.text), UNUSED)

<P><STRONG><a name="[3cb]"></a>ClrCirCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, caddresscount.o(.text), UNUSED)

<P><STRONG><a name="[3cc]"></a>SetSync</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, caddresscount.o(.text), UNUSED)

<P><STRONG><a name="[3cd]"></a>GetSync</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, caddresscount.o(.text), UNUSED)

<P><STRONG><a name="[3ce]"></a>ClrSync</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, caddresscount.o(.text), UNUSED)

<P><STRONG><a name="[28d]"></a>addxialasignal</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, caddresscount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[141]"></a>getxialasignal</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, caddresscount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Alarm
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[1a6]"></a>clr_xialasignal</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, caddresscount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
</UL>

<P><STRONG><a name="[28e]"></a>add_weixialasignal</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, caddresscount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[142]"></a>get_weixialasignal</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, caddresscount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Alarm
</UL>

<P><STRONG><a name="[1a5]"></a>clr_weixialasignal</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, caddresscount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
</UL>

<P><STRONG><a name="[13f]"></a>Clr_Alarm</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, caddresscount.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Clr_Alarm &rArr; reset_ok &rArr; Menu_complete &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_firealarm_nums
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weixialasignal
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getxialasignal
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[3cf]"></a>SaveData195</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, csendto195.o(.text), UNUSED)

<P><STRONG><a name="[3d0]"></a>GetData195</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, csendto195.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>Query_ByUart0</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, csendto195.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Query_ByUart0 &rArr; UARTSend
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inqury_state__byuart0
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_deal
</UL>

<P><STRONG><a name="[143]"></a>GetMainGrap</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, cgetgrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GetMainGrap &rArr; Main_Menu &rArr; set_menu_speaker_setup &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up_Task
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down_Task
</UL>

<P><STRONG><a name="[145]"></a>GetSetGrap</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, cgetgrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GetSetGrap &rArr; Set_Menu &rArr; set_menu_datetime_setup &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Up
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_ok
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Down
</UL>

<P><STRONG><a name="[147]"></a>GetCheckGrap</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, cgetgrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GetCheckGrap &rArr; Check_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Up
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_ok
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Down
</UL>

<P><STRONG><a name="[149]"></a>GetTestGrap</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, cgetgrap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GetTestGrap &rArr; Test_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Up
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_ok
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Down
</UL>

<P><STRONG><a name="[1a3]"></a>SetCounter1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up_Task
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down_Task
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
</UL>

<P><STRONG><a name="[24f]"></a>AddCounter1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down_Task
</UL>

<P><STRONG><a name="[24e]"></a>SubCounter1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up_Task
</UL>

<P><STRONG><a name="[14c]"></a>GetCounter1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up_Task
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sure_Task
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down_Task
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level3_Up
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Up
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel3_Sure
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Return
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level3_Down
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Down
</UL>

<P><STRONG><a name="[14f]"></a>SetCounter2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Up
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Return
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Down
</UL>

<P><STRONG><a name="[14d]"></a>AddCounter2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Down
</UL>

<P><STRONG><a name="[1f0]"></a>SubCounter2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Up
</UL>

<P><STRONG><a name="[14e]"></a>GetCounter2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sure_Task
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Up
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_Up
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_Up
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Up
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_menu_deal
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_menu_deal
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_ok
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_ok
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_ok
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel23_Return
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel22_Return
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel21_Return
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Down
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level33_Down
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Down
</UL>

<P><STRONG><a name="[196]"></a>SetCounter3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel3_Return
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel23_Return
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel22_Return
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel21_Return
</UL>

<P><STRONG><a name="[3d1]"></a>AddCounter3</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ckeycounter.o(.text), UNUSED)

<P><STRONG><a name="[3d2]"></a>SubCounter3</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ckeycounter.o(.text), UNUSED)

<P><STRONG><a name="[18e]"></a>GetCounter3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel3_Return
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level4_Down
</UL>

<P><STRONG><a name="[1d4]"></a>SetGrapCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sure_Task
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
</UL>

<P><STRONG><a name="[3d3]"></a>AddGrapCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ckeycounter.o(.text), UNUSED)

<P><STRONG><a name="[1ac]"></a>SubGrapCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
</UL>

<P><STRONG><a name="[3d4]"></a>ClrGrapCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ckeycounter.o(.text), UNUSED)

<P><STRONG><a name="[24d]"></a>GetGrapCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up_Task
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sure_Task
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down_Task
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
</UL>

<P><STRONG><a name="[3d5]"></a>AddMenuFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ckeycounter.o(.text), UNUSED)

<P><STRONG><a name="[3d6]"></a>SubMenuFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ckeycounter.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>GetMenuFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunLed_CRunCtrl
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_head_menu
</UL>

<P><STRONG><a name="[113]"></a>SetMenuFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;have_alarm_backafter30s
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_deal
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
</UL>

<P><STRONG><a name="[22f]"></a>SetPasswordFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
</UL>

<P><STRONG><a name="[d6]"></a>GetPasswordFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ckeycounter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_head_menu
</UL>

<P><STRONG><a name="[198]"></a>ClrHisCountDown</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctaskdown.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_historyrecord_ok
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel3_Return
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel22_Return
</UL>

<P><STRONG><a name="[199]"></a>ClrHistCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctaskdown.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_historyrecord_ok
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel22_Return
</UL>

<P><STRONG><a name="[14b]"></a>Level2_Down</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, ctaskdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Level2_Down &rArr; GetCheckGrap &rArr; Check_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpeaker_OFF
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel27_Sure
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCounter2
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter2
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter1
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestGrap
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCheckGrap
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSetGrap
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down_Task
</UL>

<P><STRONG><a name="[152]"></a>Level33_Down</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, ctaskdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Level33_Down &rArr; CompInten_Menu &rArr; menu_compaddr &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubIntenDep
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubIntenComp
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntenFlag
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntenDep
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntenComp
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level3_Down
</UL>

<P><STRONG><a name="[15f]"></a>hist_item</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctaskdown.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_hist_up
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_historyrecord_ok
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
</UL>

<P><STRONG><a name="[158]"></a>Level32_Down</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, ctaskdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Level32_Down &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_ok
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_history_over
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubStatusComp
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStatusComp
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStatusComp
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hist_item
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level3_Down
</UL>

<P><STRONG><a name="[161]"></a>setup_timedate_down</STRONG> (Thumb, 302 bytes, Stack size 48 bytes, ctaskdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = setup_timedate_down &rArr; DateMod_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubYear
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubSecond
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubMonth
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubMintue
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubHour
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubDay
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSecond
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMonth
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMintue
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHour
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDay
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYear
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelTime
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSecond
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonth
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMintue
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHour
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDay
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Down
</UL>

<P><STRONG><a name="[175]"></a>setup_setcomp_down</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ctaskdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = setup_setcomp_down &rArr; CompSet_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubCompSetNum
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubComSetSelSet
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCompSetNum
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComSetSelSet
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompSetNum
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompSetDep
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComSet_seltab
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComSetSelSet
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Down
</UL>

<P><STRONG><a name="[17f]"></a>setup_compreg_down</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, ctaskdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = setup_compreg_down &rArr; CompReg_menu &rArr; menu_compreg_tips &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubCompRegNum
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegDep
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCompRegNum
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegParaSel
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegNum
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegAddr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Down
</UL>

<P><STRONG><a name="[182]"></a>setup_localaddr_down</STRONG> (Thumb, 286 bytes, Stack size 48 bytes, ctaskdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = setup_localaddr_down &rArr; Local_Menu &rArr; menu_haved_saved &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_addr_value
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_localaddr
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubBaseAddr
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaseAddr
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_zone_bit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLocalParaSel
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBaseAddr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_localaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Down
</UL>

<P><STRONG><a name="[18b]"></a>setup_Down</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ctaskdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = setup_Down &rArr; setup_timedate_down &rArr; DateMod_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_down
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_down
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_down
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level3_Down
</UL>

<P><STRONG><a name="[18c]"></a>Level3_Down</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ctaskdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Level3_Down &rArr; Level32_Down &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Down
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level33_Down
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter1
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down_Task
</UL>

<P><STRONG><a name="[18d]"></a>Level4_Down</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ctaskdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Level4_Down
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter3
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down_Task
</UL>

<P><STRONG><a name="[18f]"></a>CLevel1_Return</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, ctaskreturn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CLevel1_Return &rArr; Main_Menu &rArr; set_menu_speaker_setup &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Note_Flag
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_enter_flag
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter2
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter1
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
</UL>

<P><STRONG><a name="[191]"></a>CLevel21_Return</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, ctaskreturn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CLevel21_Return &rArr; Set_Menu &rArr; set_menu_datetime_setup &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSelTime
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLocalParaSel
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCompRegParaSel
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComSet_seltab
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter3
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Menu
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrComRegFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
</UL>

<P><STRONG><a name="[197]"></a>CLevel22_Return</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, ctaskreturn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = CLevel22_Return &rArr; Check_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrHistCount
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrHisCountDown
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter3
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
</UL>

<P><STRONG><a name="[19a]"></a>CLevel23_Return</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, ctaskreturn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = CLevel23_Return &rArr; Test_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Stop
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_PWM1_Started
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetZjFlag
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSetIntenFlag
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter3
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
</UL>

<P><STRONG><a name="[19d]"></a>CLevel3_Return</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ctaskreturn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLevel3_Return
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrHisCountDown
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter3
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter3
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
</UL>

<P><STRONG><a name="[19b]"></a>SetZjFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel23_Return
</UL>

<P><STRONG><a name="[21b]"></a>GetZjFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_all_led
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_speaker
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
</UL>

<P><STRONG><a name="[19e]"></a>Set_Note_Flag</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_Note_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_ok
</UL>

<P><STRONG><a name="[7b]"></a>Clr_Note_Flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleNote
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Return
</UL>

<P><STRONG><a name="[75]"></a>Get_Note_Flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[19f]"></a>setup_ok</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = setup_ok &rArr; GetSetGrap &rArr; Set_Menu &rArr; set_menu_datetime_setup &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Note_Flag
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSetGrap
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Sure
</UL>

<P><STRONG><a name="[1a0]"></a>query_ok</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = query_ok &rArr; GetCheckGrap &rArr; Check_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCheckGrap
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Sure
</UL>

<P><STRONG><a name="[1a1]"></a>test_ok</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = test_ok &rArr; GetTestGrap &rArr; Test_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestGrap
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Sure
</UL>

<P><STRONG><a name="[7a]"></a>reset_ok</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = reset_ok &rArr; Menu_complete &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_Off
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fire_Off
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarmFlag
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Stop
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_En
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Dis
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBindSend
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_alarm_allinfo
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_complete
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrSys_CLpScanCtrl
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter1
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_weixialasignal
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_xialasignal
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReleaseFlag
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMenuFlag
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisplay_alarm_flag
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fault_Relay_Off
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fire_Relay_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleNote
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Sure
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Alarm
</UL>

<P><STRONG><a name="[1a9]"></a>menu_press_ok_complete</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = menu_press_ok_complete &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>

<P><STRONG><a name="[1ab]"></a>factory_ok</STRONG> (Thumb, 278 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = factory_ok &rArr; menu_press_ok_complete &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Section_Erase
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_waiting
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_press_return_toreturn
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_complete
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_flash_all
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_loop_all
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_press_ok_complete
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubGrapCount
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter1
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartInt
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMenuFlag
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndInt
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Sure
</UL>

<P><STRONG><a name="[1b2]"></a>GetSpeaker_Flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_speaker
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel27_Sure
</UL>

<P><STRONG><a name="[151]"></a>CLevel27_Sure</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = CLevel27_Sure &rArr; menu_Speaker_Open_Close &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_Speaker_Open_Close
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpeaker_Flag
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sure_Task
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Up
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speaker_ok
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Down
</UL>

<P><STRONG><a name="[1b4]"></a>speaker_ok</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = speaker_ok &rArr; CLevel27_Sure &rArr; menu_Speaker_Open_Close &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel27_Sure
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Sure
</UL>

<P><STRONG><a name="[1b5]"></a>CLevel1_Sure</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = CLevel1_Sure &rArr; query_ok &rArr; GetCheckGrap &rArr; Check_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speaker_ok
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_ok
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_ok
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sure_Task
</UL>

<P><STRONG><a name="[1b6]"></a>get_local_addr</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = get_local_addr &rArr; set_basic_localaddr &rArr; set_basic_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_basic_localaddr
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaseAddr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_localaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_ok
</UL>

<P><STRONG><a name="[188]"></a>local_addr_value</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = local_addr_value
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBaseAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_tab
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_up
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_set_localaddr_ok
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_circuirt
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_localaddr
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_down
</UL>

<P><STRONG><a name="[1b8]"></a>detect_circuirt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = detect_circuirt &rArr; local_addr_value
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_BaseAddr_default
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_addr_value
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_ok
</UL>

<P><STRONG><a name="[1bb]"></a>set_entry_localaddr_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_ok
</UL>

<P><STRONG><a name="[23b]"></a>get_entry_localaddr_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_tab
</UL>

<P><STRONG><a name="[250]"></a>clr_entry_localaddr_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
</UL>

<P><STRONG><a name="[1ba]"></a>menu_setup_localaddr_ok</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = menu_setup_localaddr_ok &rArr; Local_Menu &rArr; menu_haved_saved &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_entry_localaddr_flag
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_circuirt
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_local_addr
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_zone_bit
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBaseAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Sure
</UL>

<P><STRONG><a name="[1bc]"></a>menu_setup_compreg_ok</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = menu_setup_compreg_ok &rArr; CompReg_menu &rArr; menu_compreg_tips &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCompRegDep
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComRegFlag
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegDep
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegParaSel
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegNum
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegAddr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Sure
</UL>

<P><STRONG><a name="[1bf]"></a>menu_setup_setcomp_ok</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = menu_setup_setcomp_ok &rArr; CompSet_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompSetNum
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompSetDep
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComSet_seltab
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComSetSelSet
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Sure
</UL>

<P><STRONG><a name="[1c0]"></a>menu_setup_datetime_ok</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = menu_setup_datetime_ok &rArr; DateMod_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Read
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetYear
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSecond
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMonth
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMintue
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHour
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDay
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYear
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSecond
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonth
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMintue
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHour
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDay
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Sure
</UL>

<P><STRONG><a name="[1c2]"></a>setup_Sure</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = setup_Sure &rArr; menu_setup_datetime_ok &rArr; DateMod_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_setcomp_ok
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_compreg_ok
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sure_Task
</UL>

<P><STRONG><a name="[1c4]"></a>set_enter_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_ok
</UL>

<P><STRONG><a name="[3d7]"></a>get_enter_falg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ctasksure.o(.text), UNUSED)

<P><STRONG><a name="[190]"></a>clr_enter_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Return
</UL>

<P><STRONG><a name="[1c3]"></a>query_system_ok</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = query_system_ok &rArr; SysCheck_Menu &rArr; menu_system_query_compnums &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_zones
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCheck_Menu
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysCheckDep
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enter_flag
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_Sure
</UL>

<P><STRONG><a name="[15c]"></a>query_compstatus_ok</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStatusFlag
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStatusDep
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRow
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDepComp
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStatusComp
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_devtype
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_up
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_Sure
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
</UL>

<P><STRONG><a name="[1cd]"></a>query_historyrecord_ok</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = query_historyrecord_ok &rArr; History_Menu &rArr; menu_lowvolatage &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_nohistory
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hist_item
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrHistCount
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrHisCountDown
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_Sure
</UL>

<P><STRONG><a name="[1cf]"></a>query_Sure</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = query_Sure &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_historyrecord_ok
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_ok
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sure_Task
</UL>

<P><STRONG><a name="[1d0]"></a>selftest_ok</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = selftest_ok &rArr; Return_Task &rArr; CLevel22_Return &rArr; Check_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_ALL_On
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_PWM1_Started
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Start
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBindSend
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestSelf_Menu
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetZjFlag
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGrapCount
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter2
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter1
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_Sure
</UL>

<P><STRONG><a name="[1d6]"></a>sigstrength_ok</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = sigstrength_ok &rArr; CompInten_Menu &rArr; menu_compaddr &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSetIntenFlag
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_Sure
</UL>

<P><STRONG><a name="[1d7]"></a>test_Sure</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = test_Sure &rArr; sigstrength_ok &rArr; CompInten_Menu &rArr; menu_compaddr &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sigstrength_ok
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sure_Task
</UL>

<P><STRONG><a name="[1f1]"></a>SetSpeaker_ON</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Up
</UL>

<P><STRONG><a name="[150]"></a>SetSpeaker_OFF</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Down
</UL>

<P><STRONG><a name="[1d8]"></a>menu_set_localaddr_ok</STRONG> (Thumb, 282 bytes, Stack size 48 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = menu_set_localaddr_ok &rArr; Local_Menu &rArr; menu_haved_saved &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_basic_localaddr
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_BaseAddr_default
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_basic_info
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_addr_value
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_zone_bit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLocalParaSel
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBaseAddr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_localaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
</UL>

<P><STRONG><a name="[1da]"></a>menu_comp_noreg</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>

<P><STRONG><a name="[1db]"></a>menu_setup_done</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_setup_done &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
</UL>

<P><STRONG><a name="[1dc]"></a>menu_press_ok_save</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>

<P><STRONG><a name="[1dd]"></a>menu_deling</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_deling &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>

<P><STRONG><a name="[1de]"></a>menu_opsing</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_opsing &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>

<P><STRONG><a name="[1df]"></a>menu_ops_done</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_ops_done &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>

<P><STRONG><a name="[1e0]"></a>menu_comp_masked</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_comp_masked &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>

<P><STRONG><a name="[1e1]"></a>menu_comp_started</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_comp_started &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>

<P><STRONG><a name="[1e2]"></a>menu_colon</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ctasksure.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
</UL>

<P><STRONG><a name="[1e3]"></a>menu_compset</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_compset &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>

<P><STRONG><a name="[1e4]"></a>opstype_deleted</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = opstype_deleted
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComSetSelSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
</UL>

<P><STRONG><a name="[1e5]"></a>setup_menu_deal</STRONG> (Thumb, 1098 bytes, Stack size 64 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = setup_menu_deal &rArr; menu_set_localaddr_ok &rArr; Local_Menu &rArr; menu_haved_saved &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getcurrent_date
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Set
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_same_ciraddr
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_store_comp_info
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDepCompSum
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComRegFlag
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRow
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrReg_CNodeInfo
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opstype_deleted
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_set_localaddr_ok
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYear
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelTime
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSecond
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonth
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMintue
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHour
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDay
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompSetNum
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompSetDep
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegDep
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComSet_seltab
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComSetSelSet
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mask_info
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_hist_allinfo
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mask_info
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hist_all
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_comp_info
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mask_info
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_devtype
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReg_CNodeInfo
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegParaSel
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegNum
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegAddr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel3_Sure
</UL>

<P><STRONG><a name="[1ea]"></a>query_menu_deal</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = query_menu_deal &rArr; SysCheck_Menu &rArr; menu_system_query_compnums &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_zones
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCheck_Menu
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysCheckDep
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysCheckDep
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel3_Sure
</UL>

<P><STRONG><a name="[1ec]"></a>test_menu_deal</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = test_menu_deal &rArr; CompInten_Menu &rArr; menu_compaddr &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel3_Sure
</UL>

<P><STRONG><a name="[1ee]"></a>speaker_menu_deal</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ctasksure.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel3_Sure
</UL>

<P><STRONG><a name="[1ed]"></a>CLevel3_Sure</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ctasksure.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = CLevel3_Sure &rArr; setup_menu_deal &rArr; menu_set_localaddr_ok &rArr; Local_Menu &rArr; menu_haved_saved &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;speaker_menu_deal
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_menu_deal
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_menu_deal
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter1
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sure_Task
</UL>

<P><STRONG><a name="[1ef]"></a>Level2_Up</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Level2_Up &rArr; GetCheckGrap &rArr; Check_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSpeaker_ON
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel27_Sure
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubCounter2
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter2
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter1
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestGrap
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCheckGrap
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSetGrap
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up_Task
</UL>

<P><STRONG><a name="[1f2]"></a>test_sigStrlength_up</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = test_sigStrlength_up &rArr; CompInten_Menu &rArr; menu_compaddr &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIntenDep
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIntenComp
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddIntenDep
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddIntenComp
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_zones
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntenFlag
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntenDep
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntenComp
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_Up
</UL>

<P><STRONG><a name="[1f7]"></a>test_Up</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = test_Up &rArr; test_sigStrlength_up &rArr; CompInten_Menu &rArr; menu_compaddr &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sigStrlength_up
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level3_Up
</UL>

<P><STRONG><a name="[1f8]"></a>query_hist_up</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = query_hist_up &rArr; History_Menu &rArr; menu_lowvolatage &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_history_over
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hist_item
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_Up
</UL>

<P><STRONG><a name="[1f9]"></a>query_compstatus_up</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = query_compstatus_up &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddStatusComp
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_ok
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStatusComp
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStatusComp
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_Up
</UL>

<P><STRONG><a name="[1fb]"></a>query_system_up</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = query_system_up &rArr; SysCheck_Menu &rArr; menu_system_query_compnums &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddSysCheckDep
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_zones
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCheck_Menu
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysCheckDep
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysCheckDep
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_Up
</UL>

<P><STRONG><a name="[1fd]"></a>query_Up</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = query_Up &rArr; query_compstatus_up &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_up
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_up
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_hist_up
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level3_Up
</UL>

<P><STRONG><a name="[1fe]"></a>setup_datetime_up</STRONG> (Thumb, 250 bytes, Stack size 48 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = setup_datetime_up &rArr; DateMod_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddYear
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddSecond
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddMonth
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddMintue
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddHour
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDay
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSecond
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMonth
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMintue
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHour
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDay
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYear
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelTime
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSecond
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonth
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMintue
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHour
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDay
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Up
</UL>

<P><STRONG><a name="[205]"></a>setup_setcomp_up</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = setup_setcomp_up &rArr; CompSet_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCompSetNum
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddComSetSelSet
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCompSetNum
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComSetSelSet
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompSetNum
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompSetDep
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComSet_seltab
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComSetSelSet
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Up
</UL>

<P><STRONG><a name="[208]"></a>setup_compreg_up</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = setup_compreg_up &rArr; CompReg_menu &rArr; menu_compreg_tips &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegDep
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCompRegNum
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegParaSel
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegNum
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegAddr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCompRegNum
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Up
</UL>

<P><STRONG><a name="[209]"></a>setup_localaddr_up</STRONG> (Thumb, 518 bytes, Stack size 48 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = setup_localaddr_up &rArr; Local_Menu &rArr; menu_haved_saved &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddBaseAddr
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_addr_value
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_localaddr
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaseAddr
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_zone_bit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLocalParaSel
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBaseAddr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_localaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Up
</UL>

<P><STRONG><a name="[20b]"></a>setup_Up</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = setup_Up &rArr; setup_datetime_up &rArr; DateMod_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_up
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_up
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_up
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level3_Up
</UL>

<P><STRONG><a name="[20c]"></a>Level3_Up</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ctaskup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Level3_Up &rArr; query_Up &rArr; query_compstatus_up &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Up
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_Up
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_Up
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter1
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up_Task
</UL>

<P><STRONG><a name="[20d]"></a>show_head_menu</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, runfunction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = show_head_menu &rArr; Start_Menu &rArr; menu_head_title &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPasswordFlag
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrE1_flag
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Menu
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMenuFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[211]"></a>gethistory_show_pos</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, runfunction.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethistory_isfirealarm
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
</UL>

<P><STRONG><a name="[3d8]"></a>set_history_alarm_pos</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, runfunction.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>set_menu_alarm_info</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, runfunction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = set_menu_alarm_info
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
</UL>

<P><STRONG><a name="[21a]"></a>get_menu_alarm_info</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, runfunction.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fault
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
</UL>

<P><STRONG><a name="[218]"></a>set_alarm_newest_pos</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, runfunction.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_newest_nums
</UL>

<P><STRONG><a name="[3d9]"></a>get_alarm_newest_pos</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, runfunction.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>get_alarmpart</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, runfunction.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_newest_nums
</UL>

<P><STRONG><a name="[213]"></a>add_alarmnums</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, runfunction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = add_alarmnums
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
</UL>

<P><STRONG><a name="[21e]"></a>get_record_alarmnum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, runfunction.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
</UL>

<P><STRONG><a name="[21f]"></a>set_record_showalarm</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, runfunction.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
</UL>

<P><STRONG><a name="[215]"></a>get_record_showalarm</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, runfunction.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cur_alarmpart
</UL>

<P><STRONG><a name="[3da]"></a>sub_record_showalarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, runfunction.o(.text), UNUSED)

<P><STRONG><a name="[3db]"></a>add_record_showalarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, runfunction.o(.text), UNUSED)

<P><STRONG><a name="[214]"></a>get_cur_alarmpart</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, runfunction.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_record_showalarm
</UL>

<P><STRONG><a name="[216]"></a>get_alarm_newest_nums</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, runfunction.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarmpart
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_newest_pos
</UL>

<P><STRONG><a name="[222]"></a>clr_alarm_loop_show</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, runfunction.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
</UL>

<P><STRONG><a name="[2a2]"></a>set_alarm_loop_show</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, runfunction.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
</UL>

<P><STRONG><a name="[220]"></a>get_alarm_loop_show</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, runfunction.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
</UL>

<P><STRONG><a name="[219]"></a>menu_alarm_fire</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, runfunction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = menu_alarm_fire &rArr; Alarm_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_PWM1_Started
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Start
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_item_bypart
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_first_part
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_allinfo
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alarm_Menu
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_loop_show
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_alarm_loop_show
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_record_showalarm
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_record_alarmnum
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_alarmnums
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_menu_alarm_info
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpeaker_Flag
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetZjFlag
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_firealarm_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
</UL>

<P><STRONG><a name="[224]"></a>menu_alarm_fault</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, runfunction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = menu_alarm_fault &rArr; Breakdown &rArr; menu_batlow &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_faultalarm_nums
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Breakdown
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_menu_alarm_info
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
</UL>

<P><STRONG><a name="[227]"></a>have_alarm_backafter30s</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, runfunction.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplay_alarm_flag
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMenuFlag
</UL>

<P><STRONG><a name="[228]"></a>Systemp_Task</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, runfunction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Systemp_Task &rArr; Down_Task &rArr; Level3_Down &rArr; Level32_Down &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up_Task
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sure_Task
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Silence_Task
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down_Task
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_Task
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
</UL>

<P><STRONG><a name="[22e]"></a>DisplayKeyMenu</STRONG> (Thumb, 722 bytes, Stack size 16 bytes, runfunction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = DisplayKeyMenu &rArr; Systemp_Task &rArr; Down_Task &rArr; Level3_Down &rArr; Level32_Down &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_On
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarmFlag
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_Off
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplay_alarm_flag
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KeyValue
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrBackValue
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBackValue
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Stop
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systemp_Task
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fault
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPasswordFlag
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMenuFlag
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGrapCount
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReleaseFlag
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMenuFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[3dc]"></a>set_time_sendheart</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, runfunction.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>add_time_sendheart</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, runfunction.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
</UL>

<P><STRONG><a name="[232]"></a>get_time_sendheart</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, runfunction.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
</UL>

<P><STRONG><a name="[233]"></a>clr_time_sendheart</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, runfunction.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
</UL>

<P><STRONG><a name="[231]"></a>SendHeart</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, runfunction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SendHeart &rArr; menu_wirelessmod_fault &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_On
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_Off
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarmFlag
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_On
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_Off
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnLCD
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBindSend
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrHeartFaultFlag
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_wirelessmod_fault
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_time_sendheart
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_time_sendheart
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_time_sendheart
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMenuFlag
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeartFaultFlag
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHeartFaultFlag
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMenuFlag
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAlarmFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[3dd]"></a>CS0Setup</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, runfunction.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>inqury_state__byuart0</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, runfunction.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = inqury_state__byuart0 &rArr; Query_ByUart0 &rArr; UARTSend
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlag_195
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlag_195
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_ByUart0
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAlarmFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[23a]"></a>menu_setup_localaddr_tab</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, tasklist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = menu_setup_localaddr_tab &rArr; Local_Menu &rArr; menu_haved_saved &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddLocalParaSel
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_entry_localaddr_flag
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLocalParaSel
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_addr_value
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_localaddr
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_zone_bit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLocalParaSel
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBaseAddr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_localaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
</UL>

<P><STRONG><a name="[23d]"></a>menu_comp_reg_tab</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, tasklist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = menu_comp_reg_tab &rArr; CompReg_menu &rArr; menu_compreg_tips &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCompRegParaSel
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegDep
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegParaSel
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegNum
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompRegAddr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
</UL>

<P><STRONG><a name="[23e]"></a>menu_setup_comp_tab</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, tasklist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = menu_setup_comp_tab &rArr; CompSet_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddComSet_seltab
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComSet_seltab
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompSetNum
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCompSetDep
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComSet_seltab
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComSetSelSet
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
</UL>

<P><STRONG><a name="[240]"></a>back_task_setup_datetime</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, tasklist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = back_task_setup_datetime &rArr; DateMod_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddSelTime
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSelTime
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYear
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelTime
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSecond
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonth
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMintue
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHour
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDay
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
</UL>

<P><STRONG><a name="[242]"></a>back_task_save</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, tasklist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = back_task_save &rArr; Annotate_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAnnSel
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnnSel
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnnDep
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnnCompNum
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Annotate_Menu
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAnnSel
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
</UL>

<P><STRONG><a name="[249]"></a>back_task_comp_state</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, tasklist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = back_task_comp_state &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStatusFlag
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStatusFlag
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStatusDep
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStatusComp
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
</UL>

<P><STRONG><a name="[229]"></a>Back_Task</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, tasklist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Back_Task &rArr; back_task_comp_state &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIntenFlag
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddIntenFlag
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_comp_state
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_save
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_setup_datetime
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_comp_tab
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_reg_tab
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_tab
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIntenFlag
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter1
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systemp_Task
</UL>

<P><STRONG><a name="[22a]"></a>Up_Task</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasklist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Up_Task &rArr; Level3_Up &rArr; query_Up &rArr; query_compstatus_up &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level3_Up
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Up
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGrapCount
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter1
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubCounter1
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter1
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainGrap
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systemp_Task
</UL>

<P><STRONG><a name="[22b]"></a>Down_Task</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, tasklist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = Down_Task &rArr; Level3_Down &rArr; Level32_Down &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level4_Down
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level3_Down
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level2_Down
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGrapCount
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter1
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCounter1
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter1
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainGrap
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systemp_Task
</UL>

<P><STRONG><a name="[22c]"></a>Sure_Task</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, tasklist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Sure_Task &rArr; query_Sure &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel3_Sure
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_Sure
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_Sure
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_Sure
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Sure
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel27_Sure
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGrapCount
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGrapCount
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter2
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter1
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systemp_Task
</UL>

<P><STRONG><a name="[1d5]"></a>Return_Task</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, tasklist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Return_Task &rArr; CLevel22_Return &rArr; Check_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplay_alarm_flag
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_entry_localaddr_flag
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel3_Return
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel23_Return
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel22_Return
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel21_Return
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Return
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGrapCount
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubGrapCount
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGrapCount
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCounter1
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCounter1
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMenuFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systemp_Task
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
</UL>

<P><STRONG><a name="[22d]"></a>Silence_Task</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasklist.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Systemp_Task
</UL>

<P><STRONG><a name="[251]"></a>hardware_init</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, crunctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = hardware_init &rArr; InitLCD &rArr; ClearScreen &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Relay_Init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLCD
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CGpioIrq
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Set
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Timer_20ms
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Timer_100us
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOinit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Init
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Init
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CTimeCtrl
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitC_CSysRunFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CRunCtrl
</UL>

<P><STRONG><a name="[25b]"></a>ctrl_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, crunctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ctrl_init &rArr; Start_Menu &rArr; menu_head_title &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartBindSend
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Menu
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_flash_all
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CirAlarmDataInit
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CirAddrInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CRunCtrl
</UL>

<P><STRONG><a name="[42]"></a>Init_CRunCtrl</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, crunctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Init_CRunCtrl &rArr; ctrl_init &rArr; Start_Menu &rArr; menu_head_title &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl_init
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25e]"></a>Reset_CRunCtrl</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, crunctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CTimeCtrl
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitC_CSysRunFlag
</UL>

<P><STRONG><a name="[25f]"></a>deal_lcd</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, crunctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = deal_lcd &rArr; OffLcd
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OffLcd
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGetScreenMask
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[261]"></a>deal_speaker</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, crunctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = deal_speaker
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSpeakerPWM
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpeaker_Flag
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetZjFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[263]"></a>RunLed_CRunCtrl</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, crunctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RunLed_CRunCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Run_On
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Run_Off
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_On
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_Off
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMenuFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_all_led
</UL>

<P><STRONG><a name="[264]"></a>deal_all_led</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, crunctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = deal_all_led &rArr; RunLed_CRunCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RunLed_CRunCtrl
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetZjFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[265]"></a>pwm1_test_start_stop</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, crunctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_PWM1_Started
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Start
</UL>

<P><STRONG><a name="[44]"></a>do_CRunCtrl</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, crunctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = do_CRunCtrl &rArr; DisplayKeyMenu &rArr; Systemp_Task &rArr; Down_Task &rArr; Level3_Down &rArr; Level32_Down &rArr; query_compstatus_ok &rArr; CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleNote
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_loopld_printf
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get5s_CSysRunFlag
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get40ms_CSysRunFlag
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get20ms_CSysRunFlag
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get1s_CSysRunFlag
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get100ms_CSysRunFlag
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr5s_CSysRunFlag
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr40ms_CSysRunFlag
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr20ms_CSysRunFlag
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr1s_CSysRunFlag
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr100ms_CSysRunFlag
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_all_led
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_speaker
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deal_lcd
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inqury_state__byuart0
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_head_menu
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Alarm
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3de]"></a>zijian_speaker</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, crunctrl.o(.text), UNUSED)

<P><STRONG><a name="[253]"></a>InitC_CSysRunFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_CRunCtrl
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[3df]"></a>ClrReset_CSysRunFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csysrunflag.o(.text), UNUSED)

<P><STRONG><a name="[3e0]"></a>SetReset_CSysRunFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, csysrunflag.o(.text), UNUSED)

<P><STRONG><a name="[3e1]"></a>GetReset_CSysRunFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, csysrunflag.o(.text), UNUSED)

<P><STRONG><a name="[3e2]"></a>ClrAlarm_CSysRunFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csysrunflag.o(.text), UNUSED)

<P><STRONG><a name="[3e3]"></a>SetAlarm_CSysRunFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, csysrunflag.o(.text), UNUSED)

<P><STRONG><a name="[3e4]"></a>GetAlarm_CSysRunFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, csysrunflag.o(.text), UNUSED)

<P><STRONG><a name="[3e5]"></a>Clr50ms_CSysRunFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csysrunflag.o(.text), UNUSED)

<P><STRONG><a name="[3e6]"></a>Set50ms_CSysRunFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, csysrunflag.o(.text), UNUSED)

<P><STRONG><a name="[3e7]"></a>Get50ms_CSysRunFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, csysrunflag.o(.text), UNUSED)

<P><STRONG><a name="[270]"></a>Clr20ms_CSysRunFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[2a3]"></a>Set20ms_CSysRunFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
</UL>

<P><STRONG><a name="[26f]"></a>Get20ms_CSysRunFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[269]"></a>Clr1s_CSysRunFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[29f]"></a>Set1s_CSysRunFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
</UL>

<P><STRONG><a name="[268]"></a>Get1s_CSysRunFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[267]"></a>Clr5s_CSysRunFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[29e]"></a>Set5s_CSysRunFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
</UL>

<P><STRONG><a name="[266]"></a>Get5s_CSysRunFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[27a]"></a>ClrDisHis_CSysRunFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CTimeCtrl
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncT0Count_CTimeCtrl
</UL>

<P><STRONG><a name="[289]"></a>SetDisHis_CSysRunFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[27c]"></a>GetDisHis_CSysRunFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncT0Count_CTimeCtrl
</UL>

<P><STRONG><a name="[3e8]"></a>Clr1m_CSysRunFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csysrunflag.o(.text), UNUSED)

<P><STRONG><a name="[29d]"></a>Set1m_CSysRunFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
</UL>

<P><STRONG><a name="[3e9]"></a>Get1m_CSysRunFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, csysrunflag.o(.text), UNUSED)

<P><STRONG><a name="[26b]"></a>Clr100ms_CSysRunFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[2a0]"></a>Set100ms_CSysRunFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
</UL>

<P><STRONG><a name="[26a]"></a>Get100ms_CSysRunFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[26d]"></a>Clr40ms_CSysRunFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[2a1]"></a>Set40ms_CSysRunFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
</UL>

<P><STRONG><a name="[26c]"></a>Get40ms_CSysRunFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, csysrunflag.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[3ea]"></a>Init_CLpAnsCtrl</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, clpansctrl.o(.text), UNUSED)

<P><STRONG><a name="[283]"></a>GetData_CLpAnsCtrl</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, clpansctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveComm_CTimeCtrl
</UL>

<P><STRONG><a name="[286]"></a>SetData_CLpAnsCtrl</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, clpansctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetData_CLpAnsCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveComm_CTimeCtrl
</UL>

<P><STRONG><a name="[271]"></a>OutData_CLpAnsCtrl</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, clpansctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OutData_CLpAnsCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_0mA
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_6mA
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_20mA
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[274]"></a>OutState_CLpAnsCtrl</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, clpansctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OutState_CLpAnsCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_0mA
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_6mA
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_20mA
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[278]"></a>Init_CLpCkCtrl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, clpckctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CTimeCtrl
</UL>

<P><STRONG><a name="[ad]"></a>SetExtint_CLpCkCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpckctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
</UL>

<P><STRONG><a name="[296]"></a>GetExtint_CLpCkCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpckctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
</UL>

<P><STRONG><a name="[29a]"></a>ClrExtint_CLpCkCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpckctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
</UL>

<P><STRONG><a name="[ac]"></a>SetPer_CLpCkCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpckctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
</UL>

<P><STRONG><a name="[29b]"></a>GetPer_CLpCkCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpckctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
</UL>

<P><STRONG><a name="[3eb]"></a>ClrPer_CLpCkCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3ec]"></a>ClrReset_CLpCkCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3ed]"></a>SetReset_CLpCkCtrl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3ee]"></a>GetReset_CLpCkCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3ef]"></a>ClrAlarm_CLpCkCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3f0]"></a>SetAlarm_CLpCkCtrl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3f1]"></a>GetAlarm_CLpCkCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3f2]"></a>Clr50ms_CLpCkCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3f3]"></a>Set50ms_CLpCkCtrl</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3f4]"></a>Get50ms_CLpCkCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3f5]"></a>Clr10ms_CLpCkCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3f6]"></a>Set10ms_CLpCkCtrl</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3f7]"></a>Get10ms_CLpCkCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3f8]"></a>Clr1s_CLpCkCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3f9]"></a>Set1s_CLpCkCtrl</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3fa]"></a>Get1s_CLpCkCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3fb]"></a>Clr5s_CLpCkCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3fc]"></a>Set5s_CLpCkCtrl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[3fd]"></a>Get5s_CLpCkCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpckctrl.o(.text), UNUSED)

<P><STRONG><a name="[277]"></a>Init_CLpScanCtrl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CTimeCtrl
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[276]"></a>NewNode_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncAddr_CLpScanCtrl
</UL>

<P><STRONG><a name="[288]"></a>SetSys_CLpScanCtrl</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[e8]"></a>GetSys_CLpScanCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_lp_running
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommT0_CTimeCtrl
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncT0Count_CTimeCtrl
</UL>

<P><STRONG><a name="[49]"></a>ClrSys_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_basic_info
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndInt
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncT0Count_CTimeCtrl
</UL>

<P><STRONG><a name="[3fe]"></a>SetAddr_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[27e]"></a>GetAddr_CLpScanCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveComm_CTimeCtrl
</UL>

<P><STRONG><a name="[3ff]"></a>ClrAddr_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[275]"></a>IncAddr_CLpScanCtrl</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, clpscanctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IncAddr_CLpScanCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewNode_CLpScanCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
</UL>

<P><STRONG><a name="[27f]"></a>SetComm_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveComm_CTimeCtrl
</UL>

<P><STRONG><a name="[28f]"></a>GetComm_CLpScanCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[298]"></a>ClrComm_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
</UL>

<P><STRONG><a name="[295]"></a>SetState_CLpScanCtrl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[28b]"></a>GetState_CLpScanCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[299]"></a>ClrState_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
</UL>

<P><STRONG><a name="[284]"></a>SetAnsFlag_CLpScanCtrl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveComm_CTimeCtrl
</UL>

<P><STRONG><a name="[400]"></a>GetAnsFlag_CLpScanCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[401]"></a>ClrAnsFlag_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[402]"></a>SetAnsStar_CLpScanCtrl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[403]"></a>GetAnsStar_CLpScanCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[404]"></a>ClrAnsStar_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[294]"></a>SetAnsStep_CLpScanCtrl</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[292]"></a>GetAnsStep_CLpScanCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[405]"></a>ClrAnsStep_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[293]"></a>SetAnsTId_CLpScanCtrl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[290]"></a>GetAnsTId_CLpScanCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[406]"></a>ClrAnsTId_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[291]"></a>DecAnsTId_CLpScanCtrl</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, clpscanctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[407]"></a>SetReset_CLpScanCtrl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[408]"></a>GetReset_CLpScanCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[409]"></a>ClrReset_CLpScanCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clpscanctrl.o(.text), UNUSED)

<P><STRONG><a name="[254]"></a>Init_CTimeCtrl</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ctimectrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Init_CTimeCtrl &rArr; Init_CNodeInfo &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrDisHis_CSysRunFlag
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CNodeInfo
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CLpScanCtrl
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CLpCkCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_CRunCtrl
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[27b]"></a>IncT0Count_CTimeCtrl</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ctimectrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IncT0Count_CTimeCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisHis_CSysRunFlag
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrDisHis_CSysRunFlag
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrSys_CLpScanCtrl
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSys_CLpScanCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
</UL>

<P><STRONG><a name="[27d]"></a>SaveComm_CTimeCtrl</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, ctimectrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SaveComm_CTimeCtrl &rArr; SetData_CLpAnsCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetData_CLpAnsCtrl
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetData_CLpAnsCtrl
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComm_CNodeInfo
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState_CNodeInfo
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReg_CNodeInfo
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCkCyc_CNodeInfo
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAnsFlag_CLpScanCtrl
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComm_CLpScanCtrl
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddr_CLpScanCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[287]"></a>SetCommT0_CTimeCtrl</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, ctimectrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SetCommT0_CTimeCtrl &rArr; SaveComm_CTimeCtrl &rArr; SetData_CLpAnsCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisHis_CSysRunFlag
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSys_CLpScanCtrl
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveComm_CTimeCtrl
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSys_CLpScanCtrl
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CLpScanCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
</UL>

<P><STRONG><a name="[28a]"></a>AnsCommT0_CTimeCtrl</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, ctimectrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AnsCommT0_CTimeCtrl &rArr; OutData_CLpAnsCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutState_CLpAnsCtrl
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutData_CLpAnsCtrl
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_weixialasignal
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getxialasignal
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addxialasignal
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_loopLD_state
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState_CNodeInfo
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetReg_CNodeInfo
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecAnsTId_CLpScanCtrl
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnsTId_CLpScanCtrl
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAnsTId_CLpScanCtrl
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnsStep_CLpScanCtrl
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAnsStep_CLpScanCtrl
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetState_CLpScanCtrl
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState_CLpScanCtrl
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetComm_CLpScanCtrl
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddr_CLpScanCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
</UL>

<P><STRONG><a name="[92]"></a>T0Int_CTimeCtrl</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, ctimectrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = T0Int_CTimeCtrl &rArr; SetCommT0_CTimeCtrl &rArr; SaveComm_CTimeCtrl &rArr; SetData_CLpAnsCtrl
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisHis_CSysRunFlag
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrDisHis_CSysRunFlag
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSys_CLpScanCtrl
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMax_CNodeInfo
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCommT0_CTimeCtrl
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncT0Count_CTimeCtrl
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrState_CLpScanCtrl
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrComm_CLpScanCtrl
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncAddr_CLpScanCtrl
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddr_CLpScanCtrl
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPer_CLpCkCtrl
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrExtint_CLpCkCtrl
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetExtint_CLpCkCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[29c]"></a>set_speark_ss_time</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ctimectrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_speark_ss_time
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Stop
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1Int_CTimeCtrl
</UL>

<P><STRONG><a name="[93]"></a>T1Int_CTimeCtrl</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, ctimectrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = T1Int_CTimeCtrl &rArr; set_speark_ss_time
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_PWM1_Started
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAddScreenMask
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set40ms_CSysRunFlag
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set100ms_CSysRunFlag
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set1m_CSysRunFlag
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set5s_CSysRunFlag
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set1s_CSysRunFlag
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set20ms_CSysRunFlag
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_loop_show
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMenuFlag
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_speark_ss_time
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[2a8]"></a>SetMax_CNodeInfo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cnodeinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CNodeInfo
</UL>

<P><STRONG><a name="[2a7]"></a>ClrMax_CNodeInfo</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cnodeinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CNodeInfo
</UL>

<P><STRONG><a name="[279]"></a>Init_CNodeInfo</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cnodeinfo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Init_CNodeInfo &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrMax_CNodeInfo
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMax_CNodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CTimeCtrl
</UL>

<P><STRONG><a name="[10e]"></a>SetState_CNodeInfo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cnodeinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_normalalarm_ciraddr
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_faultalarm_ciraddr
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firealarm_ciraddr
</UL>

<P><STRONG><a name="[282]"></a>GetState_CNodeInfo</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cnodeinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveComm_CTimeCtrl
</UL>

<P><STRONG><a name="[40a]"></a>ClrState_CNodeInfo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cnodeinfo.o(.text), UNUSED)

<P><STRONG><a name="[40b]"></a>ClrReset_CNodeInfo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cnodeinfo.o(.text), UNUSED)

<P><STRONG><a name="[40c]"></a>SetReset_CNodeInfo</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cnodeinfo.o(.text), UNUSED)

<P><STRONG><a name="[40d]"></a>GetReset_CNodeInfo</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cnodeinfo.o(.text), UNUSED)

<P><STRONG><a name="[111]"></a>ClrAlarm_CNodeInfo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cnodeinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_normalalarm_ciraddr
</UL>

<P><STRONG><a name="[1e8]"></a>ClrReg_CNodeInfo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cnodeinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_store_comp_info
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_loop_all
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReg_CNodeInfo
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarm_CNodeInfo
</UL>

<P><STRONG><a name="[10d]"></a>SetAlarm_CNodeInfo</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, cnodeinfo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SetAlarm_CNodeInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrReg_CNodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_faultalarm_ciraddr
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firealarm_ciraddr
</UL>

<P><STRONG><a name="[40e]"></a>GetAlarm_CNodeInfo</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cnodeinfo.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>SetReg_CNodeInfo</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, cnodeinfo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SetReg_CNodeInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrReg_CNodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CirAddrInfo
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[280]"></a>GetReg_CNodeInfo</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cnodeinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveComm_CTimeCtrl
</UL>

<P><STRONG><a name="[297]"></a>GetMax_CNodeInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cnodeinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0Int_CTimeCtrl
</UL>

<P><STRONG><a name="[2aa]"></a>ClrCkCyc_CNodeInfo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cnodeinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComm_CNodeInfo
</UL>

<P><STRONG><a name="[2a9]"></a>SetCkCyc_CNodeInfo</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, cnodeinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComm_CNodeInfo
</UL>

<P><STRONG><a name="[281]"></a>SetComm_CNodeInfo</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, cnodeinfo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetComm_CNodeInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCkCyc_CNodeInfo
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrCkCyc_CNodeInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveComm_CTimeCtrl
</UL>

<P><STRONG><a name="[40f]"></a>GetComm_CNodeInfo</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cnodeinfo.o(.text), UNUSED)

<P><STRONG><a name="[410]"></a>ClrComm_CNodeInfo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cnodeinfo.o(.text), UNUSED)

<P><STRONG><a name="[285]"></a>GetCkCyc_CNodeInfo</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cnodeinfo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveComm_CTimeCtrl
</UL>

<P><STRONG><a name="[2ab]"></a>judge_store_new</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, store_addr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_inzone
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_storepos
</UL>

<P><STRONG><a name="[2ac]"></a>get_storepos</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, store_addr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_store_new
</UL>

<P><STRONG><a name="[2ad]"></a>get_comp_ciraddr_zp</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, store_addr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_inzone
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
</UL>

<P><STRONG><a name="[2ae]"></a>inqury_ciraddr</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, store_addr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = inqury_ciraddr &rArr; get_comp_ciraddr &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_store_comp_info
</UL>

<P><STRONG><a name="[1e9]"></a>clr_store_comp_info</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, store_addr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = clr_store_comp_info &rArr; inqury_ciraddr &rArr; get_comp_ciraddr &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrReg_CNodeInfo
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_all
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inqury_ciraddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
</UL>

<P><STRONG><a name="[25d]"></a>init_store</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, store_addr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = init_store &rArr; get_comp_psn3 &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mask_info
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn3
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn1
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn0
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_inzone
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_devtype
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReg_CNodeInfo
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_nodenums
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl_init
</UL>

<P><STRONG><a name="[21d]"></a>Alarm_Menu</STRONG> (Thumb, 1734 bytes, Stack size 112 bytes, alarmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Alarm_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnnRow
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCom0Ann
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
</UL>

<P><STRONG><a name="[2b4]"></a>menu_batlow</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, breakdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_batlow &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Breakdown
</UL>

<P><STRONG><a name="[226]"></a>Breakdown</STRONG> (Thumb, 1650 bytes, Stack size 104 bytes, breakdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Breakdown &rArr; menu_batlow &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnnRow
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCom0Ann
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_batlow
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fault
</UL>

<P><STRONG><a name="[248]"></a>Annotate_Menu</STRONG> (Thumb, 1016 bytes, Stack size 64 bytes, cannotate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Annotate_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnnRow
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCom0Ann
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_save
</UL>

<P><STRONG><a name="[2b5]"></a>menu_comp_notreged</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, ccompinten.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_comp_notreged &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
</UL>

<P><STRONG><a name="[2b6]"></a>menu_comp_sigstrength</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, ccompinten.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_comp_sigstrength &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
</UL>

<P><STRONG><a name="[106]"></a>CompInten_Menu</STRONG> (Thumb, 892 bytes, Stack size 80 bytes, ccompinten.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = CompInten_Menu &rArr; menu_compaddr &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compaddr
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_sigstrength
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_notreged
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sigStrlength_up
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_menu_deal
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sigstrength_ok
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level33_Down
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inquiry_signal_strength
</UL>

<P><STRONG><a name="[19c]"></a>CSetIntenFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompinten.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sigstrength_ok
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel23_Return
</UL>

<P><STRONG><a name="[70]"></a>CGetIntenFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ccompinten.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[2b8]"></a>menu_reging</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ccompreg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_reging &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>

<P><STRONG><a name="[2b9]"></a>menu_invalid_comp</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ccompreg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_invalid_comp &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>

<P><STRONG><a name="[2b7]"></a>menu_compaddr</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ccompreg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_compaddr &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
</UL>

<P><STRONG><a name="[411]"></a>menu_compstatus</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ccompreg.o(.text), UNUSED)

<P><STRONG><a name="[2ba]"></a>menu_comptype</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, ccompreg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_comptype &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
</UL>

<P><STRONG><a name="[2bb]"></a>menu_overciraddr</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, ccompreg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_overciraddr &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>

<P><STRONG><a name="[2bc]"></a>menu_compreged</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, ccompreg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_compreged &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>

<P><STRONG><a name="[2bd]"></a>menu_devreged</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, ccompreg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>

<P><STRONG><a name="[2be]"></a>menu_overcompnums</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, ccompreg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_overcompnums &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>

<P><STRONG><a name="[2bf]"></a>menu_regedsucc</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, ccompreg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_regedsucc &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>

<P><STRONG><a name="[2c0]"></a>menu_compreg</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, ccompreg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = menu_compreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZKBlack
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>

<P><STRONG><a name="[2c1]"></a>menu_compreg_tips</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, ccompreg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = menu_compreg_tips &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
</UL>

<P><STRONG><a name="[fc]"></a>CompReg_menu</STRONG> (Thumb, 352 bytes, Stack size 80 bytes, ccompreg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = CompReg_menu &rArr; menu_compreg_tips &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compreg_tips
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compreg
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_regedsucc
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_overcompnums
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compreged
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_overciraddr
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_invalid_comp
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_reging
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_reg_tab
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_compreg_ok
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_down
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[2c2]"></a>GNSelectBlack</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, ccompset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GNSelectBlack &rArr; DisplayJBHZKBlack &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZKBlack
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>

<P><STRONG><a name="[2c3]"></a>GNSelect</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, ccompset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GNSelect &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
</UL>

<P><STRONG><a name="[17e]"></a>CompSet_Menu</STRONG> (Thumb, 306 bytes, Stack size 56 bytes, ccompset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = CompSet_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compset
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_started
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_masked
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_ops_done
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_opsing
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_deling
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_press_ok_save
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_noreg
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_press_ok_complete
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSelect
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSelectBlack
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_comp_tab
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_setcomp_ok
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_down
</UL>

<P><STRONG><a name="[2c4]"></a>menu_devtype</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ccompstat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_devtype &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
</UL>

<P><STRONG><a name="[2c5]"></a>menu_mask_start</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ccompstat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_mask_start &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
</UL>

<P><STRONG><a name="[2c6]"></a>menu_mask_stop</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ccompstat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_mask_stop &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
</UL>

<P><STRONG><a name="[1cc]"></a>CompStat_Menu</STRONG> (Thumb, 978 bytes, Stack size 120 bytes, ccompstat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = CompStat_Menu &rArr; menu_comp_noreg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnnRow
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCom0Ann
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_noreg
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mask_info
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_mask_stop
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_mask_start
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_devtype
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comptype
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_comp_state
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_ok
</UL>

<P><STRONG><a name="[174]"></a>DateMod_Menu</STRONG> (Thumb, 2616 bytes, Stack size 72 bytes, cdatemod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = DateMod_Menu &rArr; menu_press_ok_save &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_press_ok_save
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_done
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_setup_datetime
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[148]"></a>Check_Menu</STRONG> (Thumb, 438 bytes, Stack size 40 bytes, checkmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Check_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel22_Return
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCheckGrap
</UL>

<P><STRONG><a name="[1ce]"></a>menu_nohistory</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_nohistory &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_historyrecord_ok
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
</UL>

<P><STRONG><a name="[15e]"></a>menu_history_over</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_history_over &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_hist_up
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
</UL>

<P><STRONG><a name="[2c7]"></a>menu_ciraddr</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_ciraddr &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
</UL>

<P><STRONG><a name="[2c8]"></a>menu_status</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_status &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
</UL>

<P><STRONG><a name="[2c9]"></a>menu_start</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_start &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
</UL>

<P><STRONG><a name="[2ca]"></a>menu_stop</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_stop &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
</UL>

<P><STRONG><a name="[2cb]"></a>menu_del</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_del &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
</UL>

<P><STRONG><a name="[2cc]"></a>menu_normal</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_normal &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
</UL>

<P><STRONG><a name="[2cd]"></a>menu_lowvolatage</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_lowvolatage &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
</UL>

<P><STRONG><a name="[2ce]"></a>menu_fault</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_fault &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
</UL>

<P><STRONG><a name="[2cf]"></a>menu_fire</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_fire &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
</UL>

<P><STRONG><a name="[160]"></a>History_Menu</STRONG> (Thumb, 1324 bytes, Stack size 48 bytes, chistorylist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = History_Menu &rArr; menu_lowvolatage &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAnnRow
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCom0Ann
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_nohistory
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fire
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_lowvolatage
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_normal
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_del
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_stop
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_start
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_ciraddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_hist_up
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_historyrecord_ok
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
</UL>

<P><STRONG><a name="[1aa]"></a>HZ_SHOW</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, clocalset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HZ_SHOW
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compset
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_started
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_masked
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_ops_done
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_opsing
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_deling
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_press_ok_save
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_done
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_noreg
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_press_ok_complete
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_savetips
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_saving
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_haved_saved
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fire
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_lowvolatage
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_normal
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_del
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_stop
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_start
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_status
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_mask_stop
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_mask_start
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_devtype
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compreg_tips
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compreg
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_regedsucc
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_overcompnums
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_devreged
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compreged
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_overciraddr
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comptype
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_compaddr
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_batlow
</UL>

<P><STRONG><a name="[2d0]"></a>menu_haved_saved</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, clocalset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_haved_saved &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
</UL>

<P><STRONG><a name="[2d1]"></a>menu_saving</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, clocalset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = menu_saving &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
</UL>

<P><STRONG><a name="[2d2]"></a>menu_savetips</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, clocalset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = menu_savetips &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
</UL>

<P><STRONG><a name="[2d4]"></a>menu_localaddr_nochange</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, clocalset.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
</UL>

<P><STRONG><a name="[2d3]"></a>display_or_reverse</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, clocalset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = display_or_reverse &rArr; DisplaynumberBlack &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Local_Menu
</UL>

<P><STRONG><a name="[18a]"></a>Local_Menu</STRONG> (Thumb, 546 bytes, Stack size 40 bytes, clocalset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Local_Menu &rArr; menu_haved_saved &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HZ_SHOW
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_or_reverse
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_localaddr_nochange
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_savetips
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_saving
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_haved_saved
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_tab
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_up
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_set_localaddr_ok
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_ok
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_down
</UL>

<P><STRONG><a name="[237]"></a>menu_wirelessmod_fault</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, cmodelfault.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_wirelessmod_fault &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeart
</UL>

<P><STRONG><a name="[2d5]"></a>menu_system_query</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, csyscheck.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_system_query &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCheck_Menu
</UL>

<P><STRONG><a name="[2d6]"></a>menu_system_query_compnums</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, csyscheck.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = menu_system_query_compnums &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCheck_Menu
</UL>

<P><STRONG><a name="[1c7]"></a>SysCheck_Menu</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, csyscheck.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SysCheck_Menu &rArr; menu_system_query_compnums &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_system_query_compnums
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_system_query
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_up
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_menu_deal
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_ok
</UL>

<P><STRONG><a name="[1a7]"></a>Menu_complete</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, csysreset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Menu_complete &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
</UL>

<P><STRONG><a name="[1d3]"></a>TestSelf_Menu</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ctestself.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TestSelf_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selftest_ok
</UL>

<P><STRONG><a name="[2d7]"></a>set_menu_setup</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, mainmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = set_menu_setup &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>

<P><STRONG><a name="[2d8]"></a>set_menu_query</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, mainmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = set_menu_query &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>

<P><STRONG><a name="[2d9]"></a>set_menu_test</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, mainmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = set_menu_test &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>

<P><STRONG><a name="[2da]"></a>set_menu_reset</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, mainmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = set_menu_reset &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>

<P><STRONG><a name="[2db]"></a>set_menu_backtodefault</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, mainmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = set_menu_backtodefault &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>

<P><STRONG><a name="[2dc]"></a>set_menu_speaker_setup</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, mainmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = set_menu_speaker_setup &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Menu
</UL>

<P><STRONG><a name="[144]"></a>Main_Menu</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, mainmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Main_Menu &rArr; set_menu_speaker_setup &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_speaker_setup
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_backtodefault
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_reset
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_test
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_query
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_setup
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayKeyMenu
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel1_Return
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMainGrap
</UL>

<P><STRONG><a name="[1b1]"></a>menu_press_return_toreturn</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, mainmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_press_return_toreturn &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
</UL>

<P><STRONG><a name="[1b0]"></a>menu_complete</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, mainmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_complete &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
</UL>

<P><STRONG><a name="[1b3]"></a>menu_Speaker_Open_Close</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, mainmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_Speaker_Open_Close &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel27_Sure
</UL>

<P><STRONG><a name="[1ad]"></a>menu_waiting</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, mainmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = menu_waiting &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
</UL>

<P><STRONG><a name="[2dd]"></a>set_menu_local_machine</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, setmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = set_menu_local_machine &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Menu
</UL>

<P><STRONG><a name="[2de]"></a>set_menu_component_reg</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, setmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = set_menu_component_reg &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Menu
</UL>

<P><STRONG><a name="[2df]"></a>set_menu_component_setup</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, setmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = set_menu_component_setup &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Menu
</UL>

<P><STRONG><a name="[2e0]"></a>set_menu_datetime_setup</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, setmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = set_menu_datetime_setup &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Menu
</UL>

<P><STRONG><a name="[2e1]"></a>set_menu_note</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, setmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>

<P><STRONG><a name="[2e2]"></a>set_menu_save_all</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, setmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>

<P><STRONG><a name="[146]"></a>Set_Menu</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, setmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Set_Menu &rArr; set_menu_datetime_setup &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_datetime_setup
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_component_setup
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_component_reg
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_local_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel21_Return
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSetGrap
</UL>

<P><STRONG><a name="[2e3]"></a>CSaveInfo</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, setmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>

<P><STRONG><a name="[2e4]"></a>Set_Menu1</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, setmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>

<P><STRONG><a name="[2e5]"></a>show_date_time</STRONG> (Thumb, 444 bytes, Stack size 16 bytes, startmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = show_date_time &rArr; Displaynumber &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Menu
</UL>

<P><STRONG><a name="[2e6]"></a>menu_head_title</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, startmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = menu_head_title &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Menu
</UL>

<P><STRONG><a name="[210]"></a>Start_Menu</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, startmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Start_Menu &rArr; menu_head_title &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCF8563_Read
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_head_title
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_date_time
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl_init
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_head_menu
</UL>

<P><STRONG><a name="[14a]"></a>Test_Menu</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, testmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Test_Menu &rArr; DisplayJBHZK &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel23_Return
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTestGrap
</UL>

<P><STRONG><a name="[2e7]"></a>Test_Menu1</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, testmenu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
</UL>

<P><STRONG><a name="[412]"></a>SetHistFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[413]"></a>GetHistFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[2ea]"></a>get_hist_attr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_hist_attr &rArr; get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethistory_isfirealarm
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethistory_isfault
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethistory_isbatlow
</UL>

<P><STRONG><a name="[212]"></a>gethistory_isfirealarm</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethistory_show_pos
</UL>

<P><STRONG><a name="[2eb]"></a>gethistory_isbatlow</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_attr
</UL>

<P><STRONG><a name="[2ec]"></a>gethistory_isfault</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_attr
</UL>

<P><STRONG><a name="[414]"></a>AddPageConter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[415]"></a>SetPageConter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[416]"></a>GetPageConter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[417]"></a>AddHistConter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>GetHistConter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethistory_show_pos
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_hist_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_historyrecord_ok
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_histnums_info
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_histnums_info
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hist_info
</UL>

<P><STRONG><a name="[336]"></a>SetHistConter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_histnums_info
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hist_info
</UL>

<P><STRONG><a name="[418]"></a>setHistFullFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[2ee]"></a>getHistFullFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHistFull
</UL>

<P><STRONG><a name="[2ed]"></a>getHistFull</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHistFullFlag
</UL>

<P><STRONG><a name="[2f1]"></a>init_basic_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = init_basic_info &rArr; init_record &rArr; M25P80_Read_1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_record
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_flash_all
</UL>

<P><STRONG><a name="[2f2]"></a>set_basic_info</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = set_basic_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_array
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_basic_localaddr
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_basic_zones
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_basic_nums
</UL>

<P><STRONG><a name="[2f4]"></a>get_basic_info</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_basic_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_array
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_zones
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_localaddr
</UL>

<P><STRONG><a name="[1d9]"></a>save_basic_info</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = save_basic_info &rArr; save_record &rArr; M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_En
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Eint_Dis
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrSys_CLpScanCtrl
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_record
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_set_localaddr_ok
</UL>

<P><STRONG><a name="[2f5]"></a>set_basic_nums</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_basic_info
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sub_basic_nums
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_basic_nums
</UL>

<P><STRONG><a name="[eb]"></a>get_comp_partnumber</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_comp_partnumber &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_loop_all
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRow
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDepComp
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;History_Menu
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_nums
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inquiry_signal_strength
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_zone_comp_info
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_zone_comp
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_all
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr_zp
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_store_new
</UL>

<P><STRONG><a name="[f8]"></a>get_basic_nums</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_basic_nums &rArr; get_comp_partnumber &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_up
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_menu_deal
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_ok
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sub_basic_nums
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_basic_nums
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_system_query_compnums
</UL>

<P><STRONG><a name="[2f7]"></a>add_basic_nums</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_nums
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_basic_nums
</UL>

<P><STRONG><a name="[2f8]"></a>sub_basic_nums</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_nums
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_basic_nums
</UL>

<P><STRONG><a name="[1b7]"></a>set_basic_localaddr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = set_basic_localaddr &rArr; set_basic_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_basic_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_set_localaddr_ok
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_local_addr
</UL>

<P><STRONG><a name="[2f9]"></a>set_basic_zones</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_basic_info
</UL>

<P><STRONG><a name="[f9]"></a>get_basic_localaddr</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_basic_localaddr &rArr; get_basic_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_info
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_tab
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_up
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_set_localaddr_ok
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_local_addr
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_down
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[1c6]"></a>get_basic_zones</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_basic_zones &rArr; get_basic_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_up
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sigStrlength_up
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_menu_deal
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_ok
</UL>

<P><STRONG><a name="[2fa]"></a>init_comp_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = init_comp_info &rArr; init_record &rArr; M25P80_Read_1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_record
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_flash_all
</UL>

<P><STRONG><a name="[102]"></a>save_comp_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = save_comp_info &rArr; save_record &rArr; M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_record
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all_and_save
</UL>

<P><STRONG><a name="[2fc]"></a>set_comp_inzone</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_comp_inzone &rArr; set_comp_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_all
</UL>

<P><STRONG><a name="[2fd]"></a>set_comp_partnumber</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_comp_partnumber &rArr; set_comp_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_all
</UL>

<P><STRONG><a name="[2fe]"></a>set_comp_ciraddr</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_comp_ciraddr &rArr; set_comp_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_all
</UL>

<P><STRONG><a name="[2ff]"></a>set_comp_psn0</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_comp_psn0 &rArr; set_comp_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_all
</UL>

<P><STRONG><a name="[300]"></a>set_comp_psn1</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_comp_psn1 &rArr; set_comp_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_all
</UL>

<P><STRONG><a name="[301]"></a>set_comp_psn2</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_comp_psn2 &rArr; set_comp_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_all
</UL>

<P><STRONG><a name="[302]"></a>set_comp_psn3</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_comp_psn3 &rArr; set_comp_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_all
</UL>

<P><STRONG><a name="[303]"></a>set_comp_devtype</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_comp_devtype &rArr; set_comp_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_all
</UL>

<P><STRONG><a name="[fe]"></a>set_comp_all</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = set_comp_all &rArr; set_comp_devtype &rArr; set_comp_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_devtype
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn3
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn2
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn1
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn0
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_ciraddr
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_partnumber
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_inzone
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all_and_save
</UL>

<P><STRONG><a name="[2af]"></a>clr_comp_all</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = clr_comp_all &rArr; set_comp_devtype &rArr; set_comp_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_devtype
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn3
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn2
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn1
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn0
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_ciraddr
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_partnumber
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_inzone
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_store_comp_info
</UL>

<P><STRONG><a name="[128]"></a>get_comp_ciraddr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_comp_ciraddr &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_same_ciraddr
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_store_comp_info
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_comp_loop_all
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_ok
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CirAddrInfo
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareCirAddr
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inqury_ciraddr
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr_zp
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_store_new
</UL>

<P><STRONG><a name="[1ae]"></a>clr_comp_loop_all</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = clr_comp_loop_all &rArr; get_comp_partnumber &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClrReg_CNodeInfo
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
</UL>

<P><STRONG><a name="[304]"></a>set_comp_all_and_save</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_all
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_comp_info
</UL>

<P><STRONG><a name="[ed]"></a>get_comp_inzone</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_comp_inzone &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inquiry_signal_strength
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_zone_comp_info
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_all
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr_zp
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_store_new
</UL>

<P><STRONG><a name="[1e7]"></a>judge_same_ciraddr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = judge_same_ciraddr &rArr; get_comp_ciraddr &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
</UL>

<P><STRONG><a name="[f2]"></a>get_comp_psn0</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_comp_psn0 &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAddr
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNum
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_all
</UL>

<P><STRONG><a name="[f3]"></a>get_comp_psn1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_comp_psn1 &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAddr
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNum
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_all
</UL>

<P><STRONG><a name="[f4]"></a>get_comp_psn2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_comp_psn2 &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAddr
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNum
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_all
</UL>

<P><STRONG><a name="[f5]"></a>get_comp_psn3</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_comp_psn3 &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAddr
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNum
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_all
</UL>

<P><STRONG><a name="[129]"></a>get_comp_devtype</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_comp_devtype &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_info
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_ok
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_all
</UL>

<P><STRONG><a name="[305]"></a>get_comp_all</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn3
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn1
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn0
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_inzone
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_devtype
</UL>

<P><STRONG><a name="[306]"></a>init_mask_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = init_mask_info &rArr; init_record &rArr; M25P80_Read_1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_record
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_flash_all
</UL>

<P><STRONG><a name="[103]"></a>save_mask_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = save_mask_info &rArr; save_record &rArr; M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_record
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[ff]"></a>set_mask_info</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = set_mask_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_array
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[127]"></a>get_mask_info</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_mask_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_array
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[307]"></a>init_alarm_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = init_alarm_info &rArr; init_record &rArr; M25P80_Read_1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_record
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_flash_all
</UL>

<P><STRONG><a name="[308]"></a>save_alarm_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = save_alarm_info &rArr; save_record &rArr; M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_record
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo_andsave
</UL>

<P><STRONG><a name="[30b]"></a>get_alarm_attr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_alarm_attr &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_info
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_firealarmed
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_faultalarmed
</UL>

<P><STRONG><a name="[30c]"></a>get_alarm_alarmed</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_alarm_alarmed &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_info
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_firealarmed
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_faultalarmed
</UL>

<P><STRONG><a name="[12e]"></a>judge_alarm_firealarmed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = judge_alarm_firealarmed &rArr; get_alarm_alarmed &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_alarmed
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_firealarm_nums
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeAlarmType
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_firealarm
</UL>

<P><STRONG><a name="[12f]"></a>judge_alarm_faultalarmed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = judge_alarm_faultalarmed &rArr; get_alarm_alarmed &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_alarmed
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_faultalarm_nums
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[30d]"></a>get_alarm_firstalarm</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_alarm_firstalarm &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_array
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_firstflag
</UL>

<P><STRONG><a name="[30e]"></a>set_alarm_inzone</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_alarm_inzone &rArr; set_alarm &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo
</UL>

<P><STRONG><a name="[30f]"></a>set_alarm_part</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_alarm_part &rArr; set_alarm &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo
</UL>

<P><STRONG><a name="[310]"></a>set_alarm_ciraddr</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_alarm_ciraddr &rArr; set_alarm &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo
</UL>

<P><STRONG><a name="[311]"></a>set_alarm_alarmsum</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_alarm_alarmsum &rArr; set_alarm &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo
</UL>

<P><STRONG><a name="[312]"></a>set_alarm_type</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_alarm_type &rArr; set_alarm &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo
</UL>

<P><STRONG><a name="[313]"></a>set_alarm_alarmed</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_alarm_alarmed &rArr; set_alarm &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo
</UL>

<P><STRONG><a name="[314]"></a>set_alarm_firstalarm</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_alarm_firstalarm &rArr; set_alarm &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_first
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo
</UL>

<P><STRONG><a name="[315]"></a>set_alarm_allinfo</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = set_alarm_allinfo &rArr; set_alarm_firstalarm &rArr; set_alarm &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_firstalarm
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_alarmed
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_type
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_alarmsum
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_ciraddr
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_part
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_inzone
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_first
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo_andsave
</UL>

<P><STRONG><a name="[316]"></a>get_alarm_ciraddr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_alarm_ciraddr &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_info
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_firealarm
</UL>

<P><STRONG><a name="[317]"></a>clr_firealarm</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = clr_firealarm &rArr; judge_alarm_firealarmed &rArr; get_alarm_alarmed &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_firealarmed
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_normalalarm_ciraddr
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_ciraddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_alarm_allinfo
</UL>

<P><STRONG><a name="[1a4]"></a>clr_alarm_allinfo</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = clr_alarm_allinfo &rArr; clr_firealarm &rArr; judge_alarm_firealarmed &rArr; get_alarm_alarmed &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_firealarm
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_record
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_ok
</UL>

<P><STRONG><a name="[12c]"></a>set_alarm_allinfo_andsave</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = set_alarm_allinfo_andsave &rArr; set_alarm_allinfo &rArr; set_alarm_firstalarm &rArr; set_alarm &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarm_info
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[319]"></a>get_alarm_part</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_alarm_part &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_info
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_item_bypart
</UL>

<P><STRONG><a name="[31a]"></a>get_alarm_type</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_info
</UL>

<P><STRONG><a name="[223]"></a>get_alarm_allinfo</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_alarm_allinfo &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_info
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_first
</UL>

<P><STRONG><a name="[12d]"></a>set_alarm_first</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = set_alarm_first &rArr; set_alarm_allinfo &rArr; set_alarm_firstalarm &rArr; set_alarm &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_firstalarm
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[31b]"></a>get_alarm_first</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_allinfo
</UL>

<P><STRONG><a name="[31c]"></a>get_alarm_firstflag</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_alarm_firstflag &rArr; get_alarm_firstalarm &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_firstalarm
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_first
</UL>

<P><STRONG><a name="[21c]"></a>get_alarm_first_part</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_alarm_first_part &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_info
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
</UL>

<P><STRONG><a name="[140]"></a>get_firealarm_nums</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = get_firealarm_nums &rArr; judge_alarm_firealarmed &rArr; get_alarm_alarmed &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_firealarmed
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clr_Alarm
</UL>

<P><STRONG><a name="[221]"></a>get_alarm_item_bypart</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_alarm_item_bypart &rArr; get_alarm_part &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_part
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fire
</UL>

<P><STRONG><a name="[225]"></a>get_faultalarm_nums</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = get_faultalarm_nums &rArr; judge_alarm_faultalarmed &rArr; get_alarm_alarmed &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_faultalarmed
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_alarm_fault
</UL>

<P><STRONG><a name="[12a]"></a>judge_alarm_first</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = judge_alarm_first &rArr; get_alarm_firstflag &rArr; get_alarm_firstalarm &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_firstflag
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[31d]"></a>init_node_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_record
</UL>

<P><STRONG><a name="[31e]"></a>save_node_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_record
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_node_and_nodenums
</UL>

<P><STRONG><a name="[31f]"></a>set_node_info</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_array
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_cs
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_hz
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_addr
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_loop
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_datalen
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_controllernum
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_targetaddr
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_devtype
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_cmd_rw
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_cmd1
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_frame3
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_frame2
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_frame1
</UL>

<P><STRONG><a name="[320]"></a>set_node_frame1</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[321]"></a>set_node_frame2</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[322]"></a>set_node_frame3</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[323]"></a>set_node_cmd1</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[324]"></a>set_node_cmd_rw</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[325]"></a>set_node_devtype</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[326]"></a>set_node_targetaddr</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[327]"></a>set_node_controllernum</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[328]"></a>set_node_datalen</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[329]"></a>set_node_loop</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[32a]"></a>set_node_addr</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[32b]"></a>set_node_hz</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[32c]"></a>set_node_cs</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_all_info
</UL>

<P><STRONG><a name="[32d]"></a>set_node_all_info</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_cs
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_hz
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_addr
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_loop
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_datalen
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_controllernum
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_targetaddr
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_devtype
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_cmd_rw
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_cmd1
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_frame3
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_frame2
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_frame1
</UL>

<P><STRONG><a name="[2b1]"></a>get_node_info</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_node_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_array
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_node_row
</UL>

<P><STRONG><a name="[32e]"></a>get_node_row</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_node_info
</UL>

<P><STRONG><a name="[32f]"></a>save_nodenums_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_record
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_node_and_nodenums
</UL>

<P><STRONG><a name="[2b0]"></a>get_nodenums</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_nodenums &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_array
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_store
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_nodenums
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_nodenums_info
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_node_and_nodenums
</UL>

<P><STRONG><a name="[330]"></a>set_nodenums</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_array
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_nodenums
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_nodenums_info
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_node_and_nodenums
</UL>

<P><STRONG><a name="[331]"></a>save_node_and_nodenums</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_nodenums
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_nodenums_info
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_node_info
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_nodenums
</UL>

<P><STRONG><a name="[332]"></a>init_nodenums_info</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_nodenums
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_record
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_nodenums
</UL>

<P><STRONG><a name="[333]"></a>add_nodenums</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_nodenums
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_nodenums
</UL>

<P><STRONG><a name="[334]"></a>init_hist_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = init_hist_info &rArr; init_record &rArr; M25P80_Read_1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_record
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hist_and_histnums
</UL>

<P><STRONG><a name="[335]"></a>save_hist_info</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = save_hist_info &rArr; save_record &rArr; M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistConter
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_record
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hist_all
</UL>

<P><STRONG><a name="[337]"></a>set_hist_info</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = set_hist_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_array
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_hist_allinfo
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_hist_info
</UL>

<P><STRONG><a name="[338]"></a>clr_hist_info</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_hist_info
</UL>

<P><STRONG><a name="[339]"></a>get_hist_order</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_hist_order &rArr; get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
</UL>

<P><STRONG><a name="[33a]"></a>get_hist_inzone</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_hist_inzone &rArr; get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
</UL>

<P><STRONG><a name="[33b]"></a>get_hist_part</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_hist_part &rArr; get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
</UL>

<P><STRONG><a name="[33c]"></a>get_hist_circleaddr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_hist_circleaddr &rArr; get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
</UL>

<P><STRONG><a name="[33d]"></a>get_hist_vAnnRow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_hist_vAnnRow &rArr; get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
</UL>

<P><STRONG><a name="[33e]"></a>get_hist_opstype</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_hist_opstype &rArr; get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
</UL>

<P><STRONG><a name="[33f]"></a>get_hist_devtype</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_hist_devtype &rArr; get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
</UL>

<P><STRONG><a name="[340]"></a>get_hist_lastnum</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_hist_lastnum &rArr; get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
</UL>

<P><STRONG><a name="[341]"></a>get_hist_datetime</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_hist_datetime &rArr; get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_allinfo
</UL>

<P><STRONG><a name="[15d]"></a>get_hist_allinfo</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = get_hist_allinfo &rArr; get_hist_datetime &rArr; get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_datetime
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_lastnum
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_devtype
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_opstype
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_vAnnRow
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_circleaddr
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_part
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_inzone
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_order
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_hist_up
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_historyrecord_ok
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
</UL>

<P><STRONG><a name="[100]"></a>set_hist_allinfo</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = set_hist_allinfo &rArr; set_hist_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[344]"></a>judge_histnums_full</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = judge_histnums_full &rArr; get_histnum_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_histnum_info
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_histnums_info
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_histnums_info
</UL>

<P><STRONG><a name="[345]"></a>save_histnums_info</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = save_histnums_info &rArr; save_record &rArr; M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_histnums_full
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_histnum_info
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_record
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hist_all
</UL>

<P><STRONG><a name="[104]"></a>save_hist_all</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = save_hist_all &rArr; save_histnums_info &rArr; save_record &rArr; M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_histnums_info
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[346]"></a>set_histnum_full</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = set_histnum_full &rArr; set_histnum_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_histnum_info
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_histnums_info
</UL>

<P><STRONG><a name="[347]"></a>init_histnums_info</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = init_histnums_info &rArr; set_histnum_full &rArr; set_histnum_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHistConter
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_histnum_full
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_histnums_full
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistConter
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_histnum_info
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_record
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hist_and_histnums
</UL>

<P><STRONG><a name="[348]"></a>init_hist_and_histnums</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = init_hist_and_histnums &rArr; init_histnums_info &rArr; set_histnum_full &rArr; set_histnum_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_histnums_info
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hist_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_flash_all
</UL>

<P><STRONG><a name="[349]"></a>init_histsufix_info</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = init_histsufix_info &rArr; init_record &rArr; M25P80_Read_1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_record
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_flash_all
</UL>

<P><STRONG><a name="[1af]"></a>init_flash_all</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = init_flash_all &rArr; init_hist_and_histnums &rArr; init_histnums_info &rArr; set_histnum_full &rArr; set_histnum_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoteData_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnnCounterInit
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_histsufix_info
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hist_and_histnums
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_alarm_info
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_mask_info
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_comp_info
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_basic_info
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctrl_init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_ok
</UL>

<P><STRONG><a name="[1c9]"></a>CheckDepComp</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CheckDepComp &rArr; get_comp_partnumber &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_ok
</UL>

<P><STRONG><a name="[34a]"></a>GetNum</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn3
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn1
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn0
</UL>

<P><STRONG><a name="[419]"></a>CAddCirCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[41a]"></a>CSetCirCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[41b]"></a>CGetCirCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[1ca]"></a>GetRow</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetRow &rArr; get_comp_partnumber &rArr; get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_ok
</UL>

<P><STRONG><a name="[12b]"></a>JudgeAlarmType</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = JudgeAlarmType &rArr; judge_alarm_firealarmed &rArr; get_alarm_alarmed &rArr; get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_alarm_firealarmed
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[41c]"></a>JudgeCompAlarmType</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>SetDatatoFlash</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetDatatoFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_deal
</UL>

<P><STRONG><a name="[11f]"></a>GetDatatoFlash</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cflashparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_deal
</UL>

<P><STRONG><a name="[41d]"></a>GetDatatoFlashType</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[41e]"></a>GetDatatoFlashAlarmType</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[41f]"></a>SetFlashData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[1e6]"></a>SetDepCompSum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cflashparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
</UL>

<P><STRONG><a name="[135]"></a>GetDepCompSum</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com0DataUnzip
</UL>

<P><STRONG><a name="[420]"></a>ReadFlashPsn</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>SetCom0Ann</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cflashparam.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Com0DataUnzip
</UL>

<P><STRONG><a name="[186]"></a>SetBaseAddr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_up
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_BaseAddr_default
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_local_addr
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_down
</UL>

<P><STRONG><a name="[1b9]"></a>set_BaseAddr_default</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, cgrapparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = set_BaseAddr_default
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBaseAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_set_localaddr_ok
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detect_circuirt
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_localaddr
</UL>

<P><STRONG><a name="[20a]"></a>AddBaseAddr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_up
</UL>

<P><STRONG><a name="[185]"></a>SubBaseAddr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_down
</UL>

<P><STRONG><a name="[184]"></a>GetBaseAddr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_tab
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_up
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_set_localaddr_ok
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_ok
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_addr_value
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_down
</UL>

<P><STRONG><a name="[23c]"></a>AddLocalParaSel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_tab
</UL>

<P><STRONG><a name="[192]"></a>SetLocalParaSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_tab
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel21_Return
</UL>

<P><STRONG><a name="[183]"></a>GetLocalParaSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_tab
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_up
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_set_localaddr_ok
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_down
</UL>

<P><STRONG><a name="[421]"></a>Set_department</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[422]"></a>Add_department</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[423]"></a>Sub_department</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>Get_zone_bit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_tab
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_up
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_set_localaddr_ok
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_ok
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_down
</UL>

<P><STRONG><a name="[424]"></a>Add_department_sel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[425]"></a>Set_department_sel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[426]"></a>Get_zone_bit_sel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>check_localaddr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cgrapparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = check_localaddr &rArr; local_addr_value
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_BaseAddr_default
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;local_addr_value
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_localaddr_tab
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_up
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_localaddr_down
</UL>

<P><STRONG><a name="[1be]"></a>SetComRegFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_compreg_ok
</UL>

<P><STRONG><a name="[130]"></a>ClrComRegFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel21_Return
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
</UL>

<P><STRONG><a name="[6e]"></a>GetComRegFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleInfo_Uart1
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[427]"></a>AddCompRegParaSel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[193]"></a>SetCompRegParaSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_reg_tab
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel21_Return
</UL>

<P><STRONG><a name="[fa]"></a>GetCompRegParaSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_reg_tab
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_compreg_ok
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_down
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[1bd]"></a>SetCompRegDep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_compreg_ok
</UL>

<P><STRONG><a name="[428]"></a>AddCompRegDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[429]"></a>SubCompRegDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[181]"></a>GetCompRegDep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_reg_tab
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_compreg_ok
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_down
</UL>

<P><STRONG><a name="[f1]"></a>SetCompRegNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_up
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_down
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoadd_compreg
</UL>

<P><STRONG><a name="[ef]"></a>AddCompRegNum</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_up
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoadd_compreg
</UL>

<P><STRONG><a name="[180]"></a>SubCompRegNum</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_down
</UL>

<P><STRONG><a name="[f0]"></a>GetCompRegNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_reg_tab
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_compreg_ok
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_down
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoadd_compreg
</UL>

<P><STRONG><a name="[42a]"></a>SetCompRegAddr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[42b]"></a>AddCompRegAddr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[42c]"></a>SubCompRegAddr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>GetCompRegAddr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_comp_reg_tab
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_compreg_ok
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_compreg_down
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[42d]"></a>AddCompSetDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[42e]"></a>SubCompSetDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[17d]"></a>GetCompSetDep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_comp_tab
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_setcomp_ok
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_down
</UL>

<P><STRONG><a name="[42f]"></a>SetCompSetDep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[206]"></a>AddCompSetNum</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_up
</UL>

<P><STRONG><a name="[178]"></a>SubCompSetNum</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_down
</UL>

<P><STRONG><a name="[177]"></a>GetCompSetNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_comp_tab
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_setcomp_ok
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_down
</UL>

<P><STRONG><a name="[179]"></a>SetCompSetNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_up
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_down
</UL>

<P><STRONG><a name="[17c]"></a>SetComSetSelSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_up
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_down
</UL>

<P><STRONG><a name="[207]"></a>AddComSetSelSet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_up
</UL>

<P><STRONG><a name="[17b]"></a>SubComSetSelSet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_down
</UL>

<P><STRONG><a name="[17a]"></a>GetComSetSelSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_comp_tab
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opstype_deleted
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_setcomp_ok
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_down
</UL>

<P><STRONG><a name="[23f]"></a>AddComSet_seltab</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_comp_tab
</UL>

<P><STRONG><a name="[430]"></a>SubComSet_seltab</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[176]"></a>GetComSet_seltab</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_comp_tab
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_setcomp_ok
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_setcomp_down
</UL>

<P><STRONG><a name="[194]"></a>SetComSet_seltab</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_comp_tab
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel21_Return
</UL>

<P><STRONG><a name="[1c1]"></a>SetYear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
</UL>

<P><STRONG><a name="[1ff]"></a>AddYear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
</UL>

<P><STRONG><a name="[164]"></a>SubYear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[163]"></a>GetYear</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_setup_datetime
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[167]"></a>SetMonth</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[200]"></a>AddMonth</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
</UL>

<P><STRONG><a name="[166]"></a>SubMonth</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[165]"></a>GetMonth</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_setup_datetime
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[201]"></a>AddDay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
</UL>

<P><STRONG><a name="[169]"></a>SubDay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[168]"></a>GetDay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_setup_datetime
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[16a]"></a>SetDay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[16d]"></a>SetHour</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[202]"></a>AddHour</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
</UL>

<P><STRONG><a name="[16c]"></a>SubHour</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[16b]"></a>GetHour</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_setup_datetime
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[170]"></a>SetMintue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[203]"></a>AddMintue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
</UL>

<P><STRONG><a name="[16f]"></a>SubMintue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[16e]"></a>GetMintue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_setup_datetime
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[173]"></a>SetSecond</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[204]"></a>AddSecond</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
</UL>

<P><STRONG><a name="[172]"></a>SubSecond</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[171]"></a>GetSecond</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_setup_datetime
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_setup_datetime_ok
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[195]"></a>SetSelTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_setup_datetime
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLevel21_Return
</UL>

<P><STRONG><a name="[241]"></a>AddSelTime</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_setup_datetime
</UL>

<P><STRONG><a name="[162]"></a>GetSelTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_setup_datetime
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_datetime_up
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_menu_deal
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_timedate_down
</UL>

<P><STRONG><a name="[431]"></a>SetAnnDep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[432]"></a>AddAnnDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[433]"></a>SubAnnDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[247]"></a>GetAnnDep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_save
</UL>

<P><STRONG><a name="[434]"></a>SetAnnCompNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[435]"></a>AddAnnCompNum</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[436]"></a>SubAnnCompNum</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[246]"></a>GetAnnCompNum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_save
</UL>

<P><STRONG><a name="[245]"></a>SetAnnSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_save
</UL>

<P><STRONG><a name="[243]"></a>AddAnnSel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_save
</UL>

<P><STRONG><a name="[244]"></a>GetAnnSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_save
</UL>

<P><STRONG><a name="[1fc]"></a>AddSysCheckDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_up
</UL>

<P><STRONG><a name="[437]"></a>SubSysCheckDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[1eb]"></a>SetSysCheckDep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_up
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_menu_deal
</UL>

<P><STRONG><a name="[1c5]"></a>GetSysCheckDep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_up
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_menu_deal
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_system_ok
</UL>

<P><STRONG><a name="[438]"></a>AddStatusDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[439]"></a>SubStatusDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[43a]"></a>SetStatusDep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[1c8]"></a>GetStatusDep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_comp_state
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_ok
</UL>

<P><STRONG><a name="[1fa]"></a>AddStatusComp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_up
</UL>

<P><STRONG><a name="[15a]"></a>SubStatusComp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
</UL>

<P><STRONG><a name="[15b]"></a>SetStatusComp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_up
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
</UL>

<P><STRONG><a name="[159]"></a>GetStatusComp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_comp_state
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_up
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_ok
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level32_Down
</UL>

<P><STRONG><a name="[43b]"></a>AddStatusFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text), UNUSED)

<P><STRONG><a name="[24a]"></a>SetStatusFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_comp_state
</UL>

<P><STRONG><a name="[1cb]"></a>GetStatusFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_task_comp_state
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;query_compstatus_ok
</UL>

<P><STRONG><a name="[1f3]"></a>AddIntenDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sigStrlength_up
</UL>

<P><STRONG><a name="[155]"></a>SubIntenDep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level33_Down
</UL>

<P><STRONG><a name="[1f4]"></a>SetIntenDep</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sigStrlength_up
</UL>

<P><STRONG><a name="[154]"></a>GetIntenDep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sigStrlength_up
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level33_Down
</UL>

<P><STRONG><a name="[1f5]"></a>AddIntenComp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sigStrlength_up
</UL>

<P><STRONG><a name="[157]"></a>SubIntenComp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level33_Down
</UL>

<P><STRONG><a name="[1f6]"></a>SetIntenComp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sigStrlength_up
</UL>

<P><STRONG><a name="[156]"></a>GetIntenComp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sigStrlength_up
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level33_Down
</UL>

<P><STRONG><a name="[24b]"></a>AddIntenFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
</UL>

<P><STRONG><a name="[24c]"></a>SetIntenFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
</UL>

<P><STRONG><a name="[153]"></a>GetIntenFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cgrapparam.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back_Task
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sigStrlength_up
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level33_Down
</UL>

<P><STRONG><a name="[ab]"></a>State_0mA</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csetcurrent.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT3_IRQHandler
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutState_CLpAnsCtrl
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutData_CLpAnsCtrl
</UL>

<P><STRONG><a name="[272]"></a>State_6mA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, csetcurrent.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutState_CLpAnsCtrl
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutData_CLpAnsCtrl
</UL>

<P><STRONG><a name="[273]"></a>State_20mA</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, csetcurrent.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutState_CLpAnsCtrl
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutData_CLpAnsCtrl
</UL>

<P><STRONG><a name="[28c]"></a>get_loopLD_state</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, csetcurrent.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_LD_state
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnsCommT0_CTimeCtrl
</UL>

<P><STRONG><a name="[43c]"></a>clrbuf</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, csetcurrent.o(.text), UNUSED)

<P><STRONG><a name="[34b]"></a>printbuf</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, csetcurrent.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
</UL>

<P><STRONG><a name="[34f]"></a>clr_loop_LD_counter</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, csetcurrent.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_LD_state
</UL>

<P><STRONG><a name="[34d]"></a>get_loop_LD_counter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, csetcurrent.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_LD_state
</UL>

<P><STRONG><a name="[34e]"></a>add_loop_LD_counter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, csetcurrent.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_LD_state
</UL>

<P><STRONG><a name="[34c]"></a>loop_LD_state</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, csetcurrent.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_loop_LD_counter
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_loop_LD_counter
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_loop_LD_counter
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_loopLD_state
</UL>

<P><STRONG><a name="[43d]"></a>set_print</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, csetcurrent.o(.text), UNUSED)

<P><STRONG><a name="[350]"></a>get_print</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, csetcurrent.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_loopld_printf
</UL>

<P><STRONG><a name="[351]"></a>clr_print</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, csetcurrent.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_loopld_printf
</UL>

<P><STRONG><a name="[26e]"></a>state_loopld_printf</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, csetcurrent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = state_loopld_printf
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_printf
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_print
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_print
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_CRunCtrl
</UL>

<P><STRONG><a name="[115]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_menu_alarm_info
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
</UL>

<P><STRONG><a name="[352]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[43e]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[2b2]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Breakdown
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Alarm_Menu
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompStat_Menu
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateMod_Menu
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompSet_Menu
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Menu
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Menu
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompReg_menu
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompInten_Menu
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSelect
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSelectBlack
</UL>

<P><STRONG><a name="[43f]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[440]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[441]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_fault_deal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_firealarm_face
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;comp_reg_deal
</UL>

<P><STRONG><a name="[353]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[442]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[2a6]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CNodeInfo
</UL>

<P><STRONG><a name="[443]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[444]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[354]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[38]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[445]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[355]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[446]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[357]"></a>__rt_fp_status_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[40]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[447]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>_fp_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[448]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5d]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CIntStart
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_enable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Init
</UL>

<P><STRONG><a name="[5c]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CIntStart
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_enable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Init
</UL>

<P><STRONG><a name="[60]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CIntEnd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_disable
</UL>

<P><STRONG><a name="[7e]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_all_enable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartIntStart
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
</UL>

<P><STRONG><a name="[74]"></a>Uart0SendByte</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts__
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendString
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_note_info
</UL>

<P><STRONG><a name="[7d]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_all_enable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartIntStart
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
</UL>

<P><STRONG><a name="[80]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_all_disable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartIntEnd
</UL>

<P><STRONG><a name="[8e]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ctime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timern_enable
</UL>

<P><STRONG><a name="[8d]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ctime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timern_enable
</UL>

<P><STRONG><a name="[90]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ctime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timern_disable
</UL>

<P><STRONG><a name="[9d]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_enable
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[a1]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint1_enable
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_enable
</UL>

<P><STRONG><a name="[a0]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, extint.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint1_enable
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_enable
</UL>

<P><STRONG><a name="[a3]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, extint.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint1_disable
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_disable
</UL>

<P><STRONG><a name="[2e9]"></a>get_array</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_array
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mask_info
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_firstalarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_basic_info
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_histnum_info
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_info
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_info
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_info
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_nodenums
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_node_info
</UL>

<P><STRONG><a name="[2e8]"></a>get_hist_info</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_hist_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_array
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_datetime
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_lastnum
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_devtype
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_opstype
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_vAnnRow
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_circleaddr
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_part
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_inzone
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_order
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hist_attr
</UL>

<P><STRONG><a name="[2ef]"></a>init_record</STRONG> (Thumb, 342 bytes, Stack size 24 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = init_record &rArr; M25P80_Read_1Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Read_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_histsufix_info
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_histnums_info
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hist_info
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_nodenums_info
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_node_info
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_alarm_info
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_mask_info
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_comp_info
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_basic_info
</UL>

<P><STRONG><a name="[2f0]"></a>save_record</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = save_record &rArr; M25P80_Write_1Byte &rArr; M25P80_WP_En &rArr; M25P80_CMD1B_S1B
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_1Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Section_Erase
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_lp_running
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_basic_info
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mask_info
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_comp_info
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_histnums_info
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_hist_info
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_nodenums_info
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_node_info
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_alarm_info
</UL>

<P><STRONG><a name="[318]"></a>clr_record</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = clr_record
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_alarm_allinfo
</UL>

<P><STRONG><a name="[2f3]"></a>set_array</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = set_array
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mask_info
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_hist_info
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_nodenums
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_node_info
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_basic_info
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_histnum_info
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_info
</UL>

<P><STRONG><a name="[2f6]"></a>get_comp_info</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_comp_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_array
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn3
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn1
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_psn0
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_partnumber
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_inzone
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_devtype
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_comp_ciraddr
</UL>

<P><STRONG><a name="[2fb]"></a>set_comp_info</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = set_comp_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_array
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_devtype
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn3
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn2
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn1
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_psn0
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_ciraddr
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_partnumber
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_comp_inzone
</UL>

<P><STRONG><a name="[309]"></a>set_alarm</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = set_alarm &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_array
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_allinfo
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_firstalarm
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_alarmed
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_type
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_alarmsum
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_ciraddr
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_part
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_alarm_inzone
</UL>

<P><STRONG><a name="[30a]"></a>get_alarm_info</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_alarm_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_array
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_first_part
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_allinfo
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_type
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_part
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_ciraddr
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_alarmed
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alarm_attr
</UL>

<P><STRONG><a name="[342]"></a>set_histnum_info</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = set_histnum_info &rArr; set_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_array
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_histnum_full
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_histnums_info
</UL>

<P><STRONG><a name="[343]"></a>get_histnum_info</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, cflashparam.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_histnum_info &rArr; get_array
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_array
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_histnums_info
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_histnums_full
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
